Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FINDEXIT
    PLEASE
    THANKS

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> <empty>
Rule 3     statements -> statements statement
Rule 4     statement -> var_declaration
Rule 5     statement -> assignment
Rule 6     statement -> move_command
Rule 7     statement -> rotate_command
Rule 8     statement -> for_loop
Rule 9     statement -> switch_statement
Rule 10    statement -> function_definition
Rule 11    statement -> function_call
Rule 12    statement -> get_result
Rule 13    statement -> result_statement
Rule 14    statement -> group_statements
Rule 15    group_statements -> LPAREN statements RPAREN
Rule 16    var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression
Rule 17    dimensions_opt -> <empty>
Rule 18    dimensions_opt -> LBRACKET dim_list RBRACKET
Rule 19    dim_list -> dim_list COMMA expression
Rule 20    dim_list -> expression
Rule 21    assignment -> IDENTIFIER ASSIGN expression
Rule 22    move_command -> MOVE
Rule 23    rotate_command -> ROTATE LEFT
Rule 24    rotate_command -> ROTATE RIGHT
Rule 25    for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block
Rule 26    switch_statement -> SWITCH expression TRUE block FALSE block
Rule 27    switch_statement -> SWITCH expression TRUE block
Rule 28    function_definition -> TASK IDENTIFIER parameter_list block
Rule 29    parameter_list -> <empty>
Rule 30    parameter_list -> parameter_list IDENTIFIER
Rule 31    parameter_list -> IDENTIFIER
Rule 32    function_call -> DO IDENTIFIER argument_list
Rule 33    argument_list -> <empty>
Rule 34    argument_list -> argument_list expression
Rule 35    argument_list -> expression
Rule 36    get_result -> GET IDENTIFIER
Rule 37    result_statement -> RESULT IDENTIFIER
Rule 38    block -> statements
Rule 39    block -> group_statements
Rule 40    expression -> expression PLUS expression
Rule 41    expression -> expression MINUS expression
Rule 42    expression -> expression MULT expression
Rule 43    expression -> expression DIV expression
Rule 44    expression -> expression AND expression
Rule 45    expression -> NOT expression
Rule 46    expression -> LPAREN expression RPAREN
Rule 47    expression -> DEC_INT
Rule 48    expression -> OCT_INT
Rule 49    expression -> HEX_INT
Rule 50    expression -> TRUE
Rule 51    expression -> FALSE
Rule 52    expression -> IDENTIFIER
Rule 53    expression -> MXTRUE expression
Rule 54    expression -> MXFALSE expression
Rule 55    expression -> MXEQ expression
Rule 56    expression -> MXLT expression
Rule 57    expression -> MXGT expression
Rule 58    expression -> MXLTE expression
Rule 59    expression -> MXGTE expression
Rule 60    expression -> ELEQ expression
Rule 61    expression -> ELLT expression
Rule 62    expression -> ELGT expression
Rule 63    expression -> ELLTE expression
Rule 64    expression -> ELGTE expression
Rule 65    expression -> LOGITIZE IDENTIFIER
Rule 66    expression -> DIGITIZE IDENTIFIER
Rule 67    expression -> REDUCE IDENTIFIER dimensions_opt
Rule 68    expression -> EXTEND IDENTIFIER dimensions_opt
Rule 69    expression -> SIZE LPAREN IDENTIFIER RPAREN
Rule 70    expression -> GET ENVIRONMENT

Terminals, with rules where they appear

AND                  : 44
ASSIGN               : 16 21
BOUNDARY             : 25
COMMA                : 19
DEC_INT              : 47
DIGITIZE             : 66
DIV                  : 43
DO                   : 32
ELEQ                 : 60
ELGT                 : 62
ELGTE                : 64
ELLT                 : 61
ELLTE                : 63
ENVIRONMENT          : 70
EXTEND               : 68
FALSE                : 26 51
FINDEXIT             : 
FOR                  : 25
GET                  : 36 70
HEX_INT              : 49
IDENTIFIER           : 16 21 25 28 30 31 32 36 37 52 65 66 67 68 69
LBRACKET             : 18
LEFT                 : 23
LOGITIZE             : 65
LPAREN               : 15 46 69
MINUS                : 41
MOVE                 : 22
MULT                 : 42
MXEQ                 : 55
MXFALSE              : 54
MXGT                 : 57
MXGTE                : 59
MXLT                 : 56
MXLTE                : 58
MXTRUE               : 53
NOT                  : 45
OCT_INT              : 48
PLEASE               : 
PLUS                 : 40
RBRACKET             : 18
REDUCE               : 67
RESULT               : 37
RIGHT                : 24
ROTATE               : 23 24
RPAREN               : 15 46 69
SIZE                 : 69
STEP                 : 25
SWITCH               : 26 27
TASK                 : 28
THANKS               : 
TRUE                 : 26 27 50
VAR                  : 16
error                : 

Nonterminals, with rules where they appear

argument_list        : 32 34
assignment           : 5
block                : 25 26 26 27 28
dim_list             : 18 19
dimensions_opt       : 16 67 68
expression           : 16 19 20 21 25 25 26 27 34 35 40 40 41 41 42 42 43 43 44 44 45 46 53 54 55 56 57 58 59 60 61 62 63 64
for_loop             : 8
function_call        : 11
function_definition  : 10
get_result           : 12
group_statements     : 14 39
move_command         : 6
parameter_list       : 28 30
program              : 0
result_statement     : 13
rotate_command       : 7
statement            : 3
statements           : 1 3 15 38
switch_statement     : 9
var_declaration      : 4

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> .
    (3) statements -> . statements statement

    VAR             reduce using rule 2 (statements -> .)
    IDENTIFIER      reduce using rule 2 (statements -> .)
    MOVE            reduce using rule 2 (statements -> .)
    ROTATE          reduce using rule 2 (statements -> .)
    FOR             reduce using rule 2 (statements -> .)
    SWITCH          reduce using rule 2 (statements -> .)
    TASK            reduce using rule 2 (statements -> .)
    DO              reduce using rule 2 (statements -> .)
    GET             reduce using rule 2 (statements -> .)
    RESULT          reduce using rule 2 (statements -> .)
    LPAREN          reduce using rule 2 (statements -> .)
    $end            reduce using rule 2 (statements -> .)

    program                        shift and go to state 1
    statements                     shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (3) statements -> statements . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . move_command
    (7) statement -> . rotate_command
    (8) statement -> . for_loop
    (9) statement -> . switch_statement
    (10) statement -> . function_definition
    (11) statement -> . function_call
    (12) statement -> . get_result
    (13) statement -> . result_statement
    (14) statement -> . group_statements
    (16) var_declaration -> . VAR IDENTIFIER dimensions_opt ASSIGN expression
    (21) assignment -> . IDENTIFIER ASSIGN expression
    (22) move_command -> . MOVE
    (23) rotate_command -> . ROTATE LEFT
    (24) rotate_command -> . ROTATE RIGHT
    (25) for_loop -> . FOR IDENTIFIER BOUNDARY expression STEP expression block
    (26) switch_statement -> . SWITCH expression TRUE block FALSE block
    (27) switch_statement -> . SWITCH expression TRUE block
    (28) function_definition -> . TASK IDENTIFIER parameter_list block
    (32) function_call -> . DO IDENTIFIER argument_list
    (36) get_result -> . GET IDENTIFIER
    (37) result_statement -> . RESULT IDENTIFIER
    (15) group_statements -> . LPAREN statements RPAREN

    $end            reduce using rule 1 (program -> statements .)
    VAR             shift and go to state 15
    IDENTIFIER      shift and go to state 16
    MOVE            shift and go to state 17
    ROTATE          shift and go to state 18
    FOR             shift and go to state 19
    SWITCH          shift and go to state 20
    TASK            shift and go to state 21
    DO              shift and go to state 22
    GET             shift and go to state 23
    RESULT          shift and go to state 24
    LPAREN          shift and go to state 25

    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    move_command                   shift and go to state 6
    rotate_command                 shift and go to state 7
    for_loop                       shift and go to state 8
    switch_statement               shift and go to state 9
    function_definition            shift and go to state 10
    function_call                  shift and go to state 11
    get_result                     shift and go to state 12
    result_statement               shift and go to state 13
    group_statements               shift and go to state 14

state 3

    (3) statements -> statements statement .

    VAR             reduce using rule 3 (statements -> statements statement .)
    IDENTIFIER      reduce using rule 3 (statements -> statements statement .)
    MOVE            reduce using rule 3 (statements -> statements statement .)
    ROTATE          reduce using rule 3 (statements -> statements statement .)
    FOR             reduce using rule 3 (statements -> statements statement .)
    SWITCH          reduce using rule 3 (statements -> statements statement .)
    TASK            reduce using rule 3 (statements -> statements statement .)
    DO              reduce using rule 3 (statements -> statements statement .)
    GET             reduce using rule 3 (statements -> statements statement .)
    RESULT          reduce using rule 3 (statements -> statements statement .)
    LPAREN          reduce using rule 3 (statements -> statements statement .)
    $end            reduce using rule 3 (statements -> statements statement .)
    RPAREN          reduce using rule 3 (statements -> statements statement .)
    FALSE           reduce using rule 3 (statements -> statements statement .)


state 4

    (4) statement -> var_declaration .

    VAR             reduce using rule 4 (statement -> var_declaration .)
    IDENTIFIER      reduce using rule 4 (statement -> var_declaration .)
    MOVE            reduce using rule 4 (statement -> var_declaration .)
    ROTATE          reduce using rule 4 (statement -> var_declaration .)
    FOR             reduce using rule 4 (statement -> var_declaration .)
    SWITCH          reduce using rule 4 (statement -> var_declaration .)
    TASK            reduce using rule 4 (statement -> var_declaration .)
    DO              reduce using rule 4 (statement -> var_declaration .)
    GET             reduce using rule 4 (statement -> var_declaration .)
    RESULT          reduce using rule 4 (statement -> var_declaration .)
    LPAREN          reduce using rule 4 (statement -> var_declaration .)
    $end            reduce using rule 4 (statement -> var_declaration .)
    RPAREN          reduce using rule 4 (statement -> var_declaration .)
    FALSE           reduce using rule 4 (statement -> var_declaration .)


state 5

    (5) statement -> assignment .

    VAR             reduce using rule 5 (statement -> assignment .)
    IDENTIFIER      reduce using rule 5 (statement -> assignment .)
    MOVE            reduce using rule 5 (statement -> assignment .)
    ROTATE          reduce using rule 5 (statement -> assignment .)
    FOR             reduce using rule 5 (statement -> assignment .)
    SWITCH          reduce using rule 5 (statement -> assignment .)
    TASK            reduce using rule 5 (statement -> assignment .)
    DO              reduce using rule 5 (statement -> assignment .)
    GET             reduce using rule 5 (statement -> assignment .)
    RESULT          reduce using rule 5 (statement -> assignment .)
    LPAREN          reduce using rule 5 (statement -> assignment .)
    $end            reduce using rule 5 (statement -> assignment .)
    RPAREN          reduce using rule 5 (statement -> assignment .)
    FALSE           reduce using rule 5 (statement -> assignment .)


state 6

    (6) statement -> move_command .

    VAR             reduce using rule 6 (statement -> move_command .)
    IDENTIFIER      reduce using rule 6 (statement -> move_command .)
    MOVE            reduce using rule 6 (statement -> move_command .)
    ROTATE          reduce using rule 6 (statement -> move_command .)
    FOR             reduce using rule 6 (statement -> move_command .)
    SWITCH          reduce using rule 6 (statement -> move_command .)
    TASK            reduce using rule 6 (statement -> move_command .)
    DO              reduce using rule 6 (statement -> move_command .)
    GET             reduce using rule 6 (statement -> move_command .)
    RESULT          reduce using rule 6 (statement -> move_command .)
    LPAREN          reduce using rule 6 (statement -> move_command .)
    $end            reduce using rule 6 (statement -> move_command .)
    RPAREN          reduce using rule 6 (statement -> move_command .)
    FALSE           reduce using rule 6 (statement -> move_command .)


state 7

    (7) statement -> rotate_command .

    VAR             reduce using rule 7 (statement -> rotate_command .)
    IDENTIFIER      reduce using rule 7 (statement -> rotate_command .)
    MOVE            reduce using rule 7 (statement -> rotate_command .)
    ROTATE          reduce using rule 7 (statement -> rotate_command .)
    FOR             reduce using rule 7 (statement -> rotate_command .)
    SWITCH          reduce using rule 7 (statement -> rotate_command .)
    TASK            reduce using rule 7 (statement -> rotate_command .)
    DO              reduce using rule 7 (statement -> rotate_command .)
    GET             reduce using rule 7 (statement -> rotate_command .)
    RESULT          reduce using rule 7 (statement -> rotate_command .)
    LPAREN          reduce using rule 7 (statement -> rotate_command .)
    $end            reduce using rule 7 (statement -> rotate_command .)
    RPAREN          reduce using rule 7 (statement -> rotate_command .)
    FALSE           reduce using rule 7 (statement -> rotate_command .)


state 8

    (8) statement -> for_loop .

    VAR             reduce using rule 8 (statement -> for_loop .)
    IDENTIFIER      reduce using rule 8 (statement -> for_loop .)
    MOVE            reduce using rule 8 (statement -> for_loop .)
    ROTATE          reduce using rule 8 (statement -> for_loop .)
    FOR             reduce using rule 8 (statement -> for_loop .)
    SWITCH          reduce using rule 8 (statement -> for_loop .)
    TASK            reduce using rule 8 (statement -> for_loop .)
    DO              reduce using rule 8 (statement -> for_loop .)
    GET             reduce using rule 8 (statement -> for_loop .)
    RESULT          reduce using rule 8 (statement -> for_loop .)
    LPAREN          reduce using rule 8 (statement -> for_loop .)
    $end            reduce using rule 8 (statement -> for_loop .)
    RPAREN          reduce using rule 8 (statement -> for_loop .)
    FALSE           reduce using rule 8 (statement -> for_loop .)


state 9

    (9) statement -> switch_statement .

    VAR             reduce using rule 9 (statement -> switch_statement .)
    IDENTIFIER      reduce using rule 9 (statement -> switch_statement .)
    MOVE            reduce using rule 9 (statement -> switch_statement .)
    ROTATE          reduce using rule 9 (statement -> switch_statement .)
    FOR             reduce using rule 9 (statement -> switch_statement .)
    SWITCH          reduce using rule 9 (statement -> switch_statement .)
    TASK            reduce using rule 9 (statement -> switch_statement .)
    DO              reduce using rule 9 (statement -> switch_statement .)
    GET             reduce using rule 9 (statement -> switch_statement .)
    RESULT          reduce using rule 9 (statement -> switch_statement .)
    LPAREN          reduce using rule 9 (statement -> switch_statement .)
    $end            reduce using rule 9 (statement -> switch_statement .)
    RPAREN          reduce using rule 9 (statement -> switch_statement .)
    FALSE           reduce using rule 9 (statement -> switch_statement .)


state 10

    (10) statement -> function_definition .

    VAR             reduce using rule 10 (statement -> function_definition .)
    IDENTIFIER      reduce using rule 10 (statement -> function_definition .)
    MOVE            reduce using rule 10 (statement -> function_definition .)
    ROTATE          reduce using rule 10 (statement -> function_definition .)
    FOR             reduce using rule 10 (statement -> function_definition .)
    SWITCH          reduce using rule 10 (statement -> function_definition .)
    TASK            reduce using rule 10 (statement -> function_definition .)
    DO              reduce using rule 10 (statement -> function_definition .)
    GET             reduce using rule 10 (statement -> function_definition .)
    RESULT          reduce using rule 10 (statement -> function_definition .)
    LPAREN          reduce using rule 10 (statement -> function_definition .)
    $end            reduce using rule 10 (statement -> function_definition .)
    RPAREN          reduce using rule 10 (statement -> function_definition .)
    FALSE           reduce using rule 10 (statement -> function_definition .)


state 11

    (11) statement -> function_call .

    VAR             reduce using rule 11 (statement -> function_call .)
    IDENTIFIER      reduce using rule 11 (statement -> function_call .)
    MOVE            reduce using rule 11 (statement -> function_call .)
    ROTATE          reduce using rule 11 (statement -> function_call .)
    FOR             reduce using rule 11 (statement -> function_call .)
    SWITCH          reduce using rule 11 (statement -> function_call .)
    TASK            reduce using rule 11 (statement -> function_call .)
    DO              reduce using rule 11 (statement -> function_call .)
    GET             reduce using rule 11 (statement -> function_call .)
    RESULT          reduce using rule 11 (statement -> function_call .)
    LPAREN          reduce using rule 11 (statement -> function_call .)
    $end            reduce using rule 11 (statement -> function_call .)
    RPAREN          reduce using rule 11 (statement -> function_call .)
    FALSE           reduce using rule 11 (statement -> function_call .)


state 12

    (12) statement -> get_result .

    VAR             reduce using rule 12 (statement -> get_result .)
    IDENTIFIER      reduce using rule 12 (statement -> get_result .)
    MOVE            reduce using rule 12 (statement -> get_result .)
    ROTATE          reduce using rule 12 (statement -> get_result .)
    FOR             reduce using rule 12 (statement -> get_result .)
    SWITCH          reduce using rule 12 (statement -> get_result .)
    TASK            reduce using rule 12 (statement -> get_result .)
    DO              reduce using rule 12 (statement -> get_result .)
    GET             reduce using rule 12 (statement -> get_result .)
    RESULT          reduce using rule 12 (statement -> get_result .)
    LPAREN          reduce using rule 12 (statement -> get_result .)
    $end            reduce using rule 12 (statement -> get_result .)
    RPAREN          reduce using rule 12 (statement -> get_result .)
    FALSE           reduce using rule 12 (statement -> get_result .)


state 13

    (13) statement -> result_statement .

    VAR             reduce using rule 13 (statement -> result_statement .)
    IDENTIFIER      reduce using rule 13 (statement -> result_statement .)
    MOVE            reduce using rule 13 (statement -> result_statement .)
    ROTATE          reduce using rule 13 (statement -> result_statement .)
    FOR             reduce using rule 13 (statement -> result_statement .)
    SWITCH          reduce using rule 13 (statement -> result_statement .)
    TASK            reduce using rule 13 (statement -> result_statement .)
    DO              reduce using rule 13 (statement -> result_statement .)
    GET             reduce using rule 13 (statement -> result_statement .)
    RESULT          reduce using rule 13 (statement -> result_statement .)
    LPAREN          reduce using rule 13 (statement -> result_statement .)
    $end            reduce using rule 13 (statement -> result_statement .)
    RPAREN          reduce using rule 13 (statement -> result_statement .)
    FALSE           reduce using rule 13 (statement -> result_statement .)


state 14

    (14) statement -> group_statements .

    VAR             reduce using rule 14 (statement -> group_statements .)
    IDENTIFIER      reduce using rule 14 (statement -> group_statements .)
    MOVE            reduce using rule 14 (statement -> group_statements .)
    ROTATE          reduce using rule 14 (statement -> group_statements .)
    FOR             reduce using rule 14 (statement -> group_statements .)
    SWITCH          reduce using rule 14 (statement -> group_statements .)
    TASK            reduce using rule 14 (statement -> group_statements .)
    DO              reduce using rule 14 (statement -> group_statements .)
    GET             reduce using rule 14 (statement -> group_statements .)
    RESULT          reduce using rule 14 (statement -> group_statements .)
    LPAREN          reduce using rule 14 (statement -> group_statements .)
    $end            reduce using rule 14 (statement -> group_statements .)
    RPAREN          reduce using rule 14 (statement -> group_statements .)
    FALSE           reduce using rule 14 (statement -> group_statements .)


state 15

    (16) var_declaration -> VAR . IDENTIFIER dimensions_opt ASSIGN expression

    IDENTIFIER      shift and go to state 26


state 16

    (21) assignment -> IDENTIFIER . ASSIGN expression

    ASSIGN          shift and go to state 27


state 17

    (22) move_command -> MOVE .

    VAR             reduce using rule 22 (move_command -> MOVE .)
    IDENTIFIER      reduce using rule 22 (move_command -> MOVE .)
    MOVE            reduce using rule 22 (move_command -> MOVE .)
    ROTATE          reduce using rule 22 (move_command -> MOVE .)
    FOR             reduce using rule 22 (move_command -> MOVE .)
    SWITCH          reduce using rule 22 (move_command -> MOVE .)
    TASK            reduce using rule 22 (move_command -> MOVE .)
    DO              reduce using rule 22 (move_command -> MOVE .)
    GET             reduce using rule 22 (move_command -> MOVE .)
    RESULT          reduce using rule 22 (move_command -> MOVE .)
    LPAREN          reduce using rule 22 (move_command -> MOVE .)
    $end            reduce using rule 22 (move_command -> MOVE .)
    RPAREN          reduce using rule 22 (move_command -> MOVE .)
    FALSE           reduce using rule 22 (move_command -> MOVE .)


state 18

    (23) rotate_command -> ROTATE . LEFT
    (24) rotate_command -> ROTATE . RIGHT

    LEFT            shift and go to state 28
    RIGHT           shift and go to state 29


state 19

    (25) for_loop -> FOR . IDENTIFIER BOUNDARY expression STEP expression block

    IDENTIFIER      shift and go to state 30


state 20

    (26) switch_statement -> SWITCH . expression TRUE block FALSE block
    (27) switch_statement -> SWITCH . expression TRUE block
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 31

state 21

    (28) function_definition -> TASK . IDENTIFIER parameter_list block

    IDENTIFIER      shift and go to state 58


state 22

    (32) function_call -> DO . IDENTIFIER argument_list

    IDENTIFIER      shift and go to state 59


state 23

    (36) get_result -> GET . IDENTIFIER

    IDENTIFIER      shift and go to state 60


state 24

    (37) result_statement -> RESULT . IDENTIFIER

    IDENTIFIER      shift and go to state 61


state 25

    (15) group_statements -> LPAREN . statements RPAREN
    (2) statements -> .
    (3) statements -> . statements statement

    RPAREN          reduce using rule 2 (statements -> .)
    VAR             reduce using rule 2 (statements -> .)
    IDENTIFIER      reduce using rule 2 (statements -> .)
    MOVE            reduce using rule 2 (statements -> .)
    ROTATE          reduce using rule 2 (statements -> .)
    FOR             reduce using rule 2 (statements -> .)
    SWITCH          reduce using rule 2 (statements -> .)
    TASK            reduce using rule 2 (statements -> .)
    DO              reduce using rule 2 (statements -> .)
    GET             reduce using rule 2 (statements -> .)
    RESULT          reduce using rule 2 (statements -> .)
    LPAREN          reduce using rule 2 (statements -> .)

    statements                     shift and go to state 62

state 26

    (16) var_declaration -> VAR IDENTIFIER . dimensions_opt ASSIGN expression
    (17) dimensions_opt -> .
    (18) dimensions_opt -> . LBRACKET dim_list RBRACKET

    ASSIGN          reduce using rule 17 (dimensions_opt -> .)
    LBRACKET        shift and go to state 64

    dimensions_opt                 shift and go to state 63

state 27

    (21) assignment -> IDENTIFIER ASSIGN . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 65

state 28

    (23) rotate_command -> ROTATE LEFT .

    VAR             reduce using rule 23 (rotate_command -> ROTATE LEFT .)
    IDENTIFIER      reduce using rule 23 (rotate_command -> ROTATE LEFT .)
    MOVE            reduce using rule 23 (rotate_command -> ROTATE LEFT .)
    ROTATE          reduce using rule 23 (rotate_command -> ROTATE LEFT .)
    FOR             reduce using rule 23 (rotate_command -> ROTATE LEFT .)
    SWITCH          reduce using rule 23 (rotate_command -> ROTATE LEFT .)
    TASK            reduce using rule 23 (rotate_command -> ROTATE LEFT .)
    DO              reduce using rule 23 (rotate_command -> ROTATE LEFT .)
    GET             reduce using rule 23 (rotate_command -> ROTATE LEFT .)
    RESULT          reduce using rule 23 (rotate_command -> ROTATE LEFT .)
    LPAREN          reduce using rule 23 (rotate_command -> ROTATE LEFT .)
    $end            reduce using rule 23 (rotate_command -> ROTATE LEFT .)
    RPAREN          reduce using rule 23 (rotate_command -> ROTATE LEFT .)
    FALSE           reduce using rule 23 (rotate_command -> ROTATE LEFT .)


state 29

    (24) rotate_command -> ROTATE RIGHT .

    VAR             reduce using rule 24 (rotate_command -> ROTATE RIGHT .)
    IDENTIFIER      reduce using rule 24 (rotate_command -> ROTATE RIGHT .)
    MOVE            reduce using rule 24 (rotate_command -> ROTATE RIGHT .)
    ROTATE          reduce using rule 24 (rotate_command -> ROTATE RIGHT .)
    FOR             reduce using rule 24 (rotate_command -> ROTATE RIGHT .)
    SWITCH          reduce using rule 24 (rotate_command -> ROTATE RIGHT .)
    TASK            reduce using rule 24 (rotate_command -> ROTATE RIGHT .)
    DO              reduce using rule 24 (rotate_command -> ROTATE RIGHT .)
    GET             reduce using rule 24 (rotate_command -> ROTATE RIGHT .)
    RESULT          reduce using rule 24 (rotate_command -> ROTATE RIGHT .)
    LPAREN          reduce using rule 24 (rotate_command -> ROTATE RIGHT .)
    $end            reduce using rule 24 (rotate_command -> ROTATE RIGHT .)
    RPAREN          reduce using rule 24 (rotate_command -> ROTATE RIGHT .)
    FALSE           reduce using rule 24 (rotate_command -> ROTATE RIGHT .)


state 30

    (25) for_loop -> FOR IDENTIFIER . BOUNDARY expression STEP expression block

    BOUNDARY        shift and go to state 66


state 31

    (26) switch_statement -> SWITCH expression . TRUE block FALSE block
    (27) switch_statement -> SWITCH expression . TRUE block
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    TRUE            shift and go to state 67
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72


state 32

    (50) expression -> TRUE .

    TRUE            reduce using rule 50 (expression -> TRUE .)
    PLUS            reduce using rule 50 (expression -> TRUE .)
    MINUS           reduce using rule 50 (expression -> TRUE .)
    MULT            reduce using rule 50 (expression -> TRUE .)
    DIV             reduce using rule 50 (expression -> TRUE .)
    AND             reduce using rule 50 (expression -> TRUE .)
    VAR             reduce using rule 50 (expression -> TRUE .)
    IDENTIFIER      reduce using rule 50 (expression -> TRUE .)
    MOVE            reduce using rule 50 (expression -> TRUE .)
    ROTATE          reduce using rule 50 (expression -> TRUE .)
    FOR             reduce using rule 50 (expression -> TRUE .)
    SWITCH          reduce using rule 50 (expression -> TRUE .)
    TASK            reduce using rule 50 (expression -> TRUE .)
    DO              reduce using rule 50 (expression -> TRUE .)
    GET             reduce using rule 50 (expression -> TRUE .)
    RESULT          reduce using rule 50 (expression -> TRUE .)
    LPAREN          reduce using rule 50 (expression -> TRUE .)
    $end            reduce using rule 50 (expression -> TRUE .)
    RPAREN          reduce using rule 50 (expression -> TRUE .)
    FALSE           reduce using rule 50 (expression -> TRUE .)
    NOT             reduce using rule 50 (expression -> TRUE .)
    DEC_INT         reduce using rule 50 (expression -> TRUE .)
    OCT_INT         reduce using rule 50 (expression -> TRUE .)
    HEX_INT         reduce using rule 50 (expression -> TRUE .)
    MXTRUE          reduce using rule 50 (expression -> TRUE .)
    MXFALSE         reduce using rule 50 (expression -> TRUE .)
    MXEQ            reduce using rule 50 (expression -> TRUE .)
    MXLT            reduce using rule 50 (expression -> TRUE .)
    MXGT            reduce using rule 50 (expression -> TRUE .)
    MXLTE           reduce using rule 50 (expression -> TRUE .)
    MXGTE           reduce using rule 50 (expression -> TRUE .)
    ELEQ            reduce using rule 50 (expression -> TRUE .)
    ELLT            reduce using rule 50 (expression -> TRUE .)
    ELGT            reduce using rule 50 (expression -> TRUE .)
    ELLTE           reduce using rule 50 (expression -> TRUE .)
    ELGTE           reduce using rule 50 (expression -> TRUE .)
    LOGITIZE        reduce using rule 50 (expression -> TRUE .)
    DIGITIZE        reduce using rule 50 (expression -> TRUE .)
    REDUCE          reduce using rule 50 (expression -> TRUE .)
    EXTEND          reduce using rule 50 (expression -> TRUE .)
    SIZE            reduce using rule 50 (expression -> TRUE .)
    RBRACKET        reduce using rule 50 (expression -> TRUE .)
    COMMA           reduce using rule 50 (expression -> TRUE .)
    STEP            reduce using rule 50 (expression -> TRUE .)


state 33

    (51) expression -> FALSE .

    TRUE            reduce using rule 51 (expression -> FALSE .)
    PLUS            reduce using rule 51 (expression -> FALSE .)
    MINUS           reduce using rule 51 (expression -> FALSE .)
    MULT            reduce using rule 51 (expression -> FALSE .)
    DIV             reduce using rule 51 (expression -> FALSE .)
    AND             reduce using rule 51 (expression -> FALSE .)
    VAR             reduce using rule 51 (expression -> FALSE .)
    IDENTIFIER      reduce using rule 51 (expression -> FALSE .)
    MOVE            reduce using rule 51 (expression -> FALSE .)
    ROTATE          reduce using rule 51 (expression -> FALSE .)
    FOR             reduce using rule 51 (expression -> FALSE .)
    SWITCH          reduce using rule 51 (expression -> FALSE .)
    TASK            reduce using rule 51 (expression -> FALSE .)
    DO              reduce using rule 51 (expression -> FALSE .)
    GET             reduce using rule 51 (expression -> FALSE .)
    RESULT          reduce using rule 51 (expression -> FALSE .)
    LPAREN          reduce using rule 51 (expression -> FALSE .)
    $end            reduce using rule 51 (expression -> FALSE .)
    RPAREN          reduce using rule 51 (expression -> FALSE .)
    FALSE           reduce using rule 51 (expression -> FALSE .)
    NOT             reduce using rule 51 (expression -> FALSE .)
    DEC_INT         reduce using rule 51 (expression -> FALSE .)
    OCT_INT         reduce using rule 51 (expression -> FALSE .)
    HEX_INT         reduce using rule 51 (expression -> FALSE .)
    MXTRUE          reduce using rule 51 (expression -> FALSE .)
    MXFALSE         reduce using rule 51 (expression -> FALSE .)
    MXEQ            reduce using rule 51 (expression -> FALSE .)
    MXLT            reduce using rule 51 (expression -> FALSE .)
    MXGT            reduce using rule 51 (expression -> FALSE .)
    MXLTE           reduce using rule 51 (expression -> FALSE .)
    MXGTE           reduce using rule 51 (expression -> FALSE .)
    ELEQ            reduce using rule 51 (expression -> FALSE .)
    ELLT            reduce using rule 51 (expression -> FALSE .)
    ELGT            reduce using rule 51 (expression -> FALSE .)
    ELLTE           reduce using rule 51 (expression -> FALSE .)
    ELGTE           reduce using rule 51 (expression -> FALSE .)
    LOGITIZE        reduce using rule 51 (expression -> FALSE .)
    DIGITIZE        reduce using rule 51 (expression -> FALSE .)
    REDUCE          reduce using rule 51 (expression -> FALSE .)
    EXTEND          reduce using rule 51 (expression -> FALSE .)
    SIZE            reduce using rule 51 (expression -> FALSE .)
    RBRACKET        reduce using rule 51 (expression -> FALSE .)
    COMMA           reduce using rule 51 (expression -> FALSE .)
    STEP            reduce using rule 51 (expression -> FALSE .)


state 34

    (45) expression -> NOT . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 73

state 35

    (46) expression -> LPAREN . expression RPAREN
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 74

state 36

    (47) expression -> DEC_INT .

    TRUE            reduce using rule 47 (expression -> DEC_INT .)
    PLUS            reduce using rule 47 (expression -> DEC_INT .)
    MINUS           reduce using rule 47 (expression -> DEC_INT .)
    MULT            reduce using rule 47 (expression -> DEC_INT .)
    DIV             reduce using rule 47 (expression -> DEC_INT .)
    AND             reduce using rule 47 (expression -> DEC_INT .)
    VAR             reduce using rule 47 (expression -> DEC_INT .)
    IDENTIFIER      reduce using rule 47 (expression -> DEC_INT .)
    MOVE            reduce using rule 47 (expression -> DEC_INT .)
    ROTATE          reduce using rule 47 (expression -> DEC_INT .)
    FOR             reduce using rule 47 (expression -> DEC_INT .)
    SWITCH          reduce using rule 47 (expression -> DEC_INT .)
    TASK            reduce using rule 47 (expression -> DEC_INT .)
    DO              reduce using rule 47 (expression -> DEC_INT .)
    GET             reduce using rule 47 (expression -> DEC_INT .)
    RESULT          reduce using rule 47 (expression -> DEC_INT .)
    LPAREN          reduce using rule 47 (expression -> DEC_INT .)
    $end            reduce using rule 47 (expression -> DEC_INT .)
    RPAREN          reduce using rule 47 (expression -> DEC_INT .)
    FALSE           reduce using rule 47 (expression -> DEC_INT .)
    NOT             reduce using rule 47 (expression -> DEC_INT .)
    DEC_INT         reduce using rule 47 (expression -> DEC_INT .)
    OCT_INT         reduce using rule 47 (expression -> DEC_INT .)
    HEX_INT         reduce using rule 47 (expression -> DEC_INT .)
    MXTRUE          reduce using rule 47 (expression -> DEC_INT .)
    MXFALSE         reduce using rule 47 (expression -> DEC_INT .)
    MXEQ            reduce using rule 47 (expression -> DEC_INT .)
    MXLT            reduce using rule 47 (expression -> DEC_INT .)
    MXGT            reduce using rule 47 (expression -> DEC_INT .)
    MXLTE           reduce using rule 47 (expression -> DEC_INT .)
    MXGTE           reduce using rule 47 (expression -> DEC_INT .)
    ELEQ            reduce using rule 47 (expression -> DEC_INT .)
    ELLT            reduce using rule 47 (expression -> DEC_INT .)
    ELGT            reduce using rule 47 (expression -> DEC_INT .)
    ELLTE           reduce using rule 47 (expression -> DEC_INT .)
    ELGTE           reduce using rule 47 (expression -> DEC_INT .)
    LOGITIZE        reduce using rule 47 (expression -> DEC_INT .)
    DIGITIZE        reduce using rule 47 (expression -> DEC_INT .)
    REDUCE          reduce using rule 47 (expression -> DEC_INT .)
    EXTEND          reduce using rule 47 (expression -> DEC_INT .)
    SIZE            reduce using rule 47 (expression -> DEC_INT .)
    RBRACKET        reduce using rule 47 (expression -> DEC_INT .)
    COMMA           reduce using rule 47 (expression -> DEC_INT .)
    STEP            reduce using rule 47 (expression -> DEC_INT .)


state 37

    (48) expression -> OCT_INT .

    TRUE            reduce using rule 48 (expression -> OCT_INT .)
    PLUS            reduce using rule 48 (expression -> OCT_INT .)
    MINUS           reduce using rule 48 (expression -> OCT_INT .)
    MULT            reduce using rule 48 (expression -> OCT_INT .)
    DIV             reduce using rule 48 (expression -> OCT_INT .)
    AND             reduce using rule 48 (expression -> OCT_INT .)
    VAR             reduce using rule 48 (expression -> OCT_INT .)
    IDENTIFIER      reduce using rule 48 (expression -> OCT_INT .)
    MOVE            reduce using rule 48 (expression -> OCT_INT .)
    ROTATE          reduce using rule 48 (expression -> OCT_INT .)
    FOR             reduce using rule 48 (expression -> OCT_INT .)
    SWITCH          reduce using rule 48 (expression -> OCT_INT .)
    TASK            reduce using rule 48 (expression -> OCT_INT .)
    DO              reduce using rule 48 (expression -> OCT_INT .)
    GET             reduce using rule 48 (expression -> OCT_INT .)
    RESULT          reduce using rule 48 (expression -> OCT_INT .)
    LPAREN          reduce using rule 48 (expression -> OCT_INT .)
    $end            reduce using rule 48 (expression -> OCT_INT .)
    RPAREN          reduce using rule 48 (expression -> OCT_INT .)
    FALSE           reduce using rule 48 (expression -> OCT_INT .)
    NOT             reduce using rule 48 (expression -> OCT_INT .)
    DEC_INT         reduce using rule 48 (expression -> OCT_INT .)
    OCT_INT         reduce using rule 48 (expression -> OCT_INT .)
    HEX_INT         reduce using rule 48 (expression -> OCT_INT .)
    MXTRUE          reduce using rule 48 (expression -> OCT_INT .)
    MXFALSE         reduce using rule 48 (expression -> OCT_INT .)
    MXEQ            reduce using rule 48 (expression -> OCT_INT .)
    MXLT            reduce using rule 48 (expression -> OCT_INT .)
    MXGT            reduce using rule 48 (expression -> OCT_INT .)
    MXLTE           reduce using rule 48 (expression -> OCT_INT .)
    MXGTE           reduce using rule 48 (expression -> OCT_INT .)
    ELEQ            reduce using rule 48 (expression -> OCT_INT .)
    ELLT            reduce using rule 48 (expression -> OCT_INT .)
    ELGT            reduce using rule 48 (expression -> OCT_INT .)
    ELLTE           reduce using rule 48 (expression -> OCT_INT .)
    ELGTE           reduce using rule 48 (expression -> OCT_INT .)
    LOGITIZE        reduce using rule 48 (expression -> OCT_INT .)
    DIGITIZE        reduce using rule 48 (expression -> OCT_INT .)
    REDUCE          reduce using rule 48 (expression -> OCT_INT .)
    EXTEND          reduce using rule 48 (expression -> OCT_INT .)
    SIZE            reduce using rule 48 (expression -> OCT_INT .)
    RBRACKET        reduce using rule 48 (expression -> OCT_INT .)
    COMMA           reduce using rule 48 (expression -> OCT_INT .)
    STEP            reduce using rule 48 (expression -> OCT_INT .)


state 38

    (49) expression -> HEX_INT .

    TRUE            reduce using rule 49 (expression -> HEX_INT .)
    PLUS            reduce using rule 49 (expression -> HEX_INT .)
    MINUS           reduce using rule 49 (expression -> HEX_INT .)
    MULT            reduce using rule 49 (expression -> HEX_INT .)
    DIV             reduce using rule 49 (expression -> HEX_INT .)
    AND             reduce using rule 49 (expression -> HEX_INT .)
    VAR             reduce using rule 49 (expression -> HEX_INT .)
    IDENTIFIER      reduce using rule 49 (expression -> HEX_INT .)
    MOVE            reduce using rule 49 (expression -> HEX_INT .)
    ROTATE          reduce using rule 49 (expression -> HEX_INT .)
    FOR             reduce using rule 49 (expression -> HEX_INT .)
    SWITCH          reduce using rule 49 (expression -> HEX_INT .)
    TASK            reduce using rule 49 (expression -> HEX_INT .)
    DO              reduce using rule 49 (expression -> HEX_INT .)
    GET             reduce using rule 49 (expression -> HEX_INT .)
    RESULT          reduce using rule 49 (expression -> HEX_INT .)
    LPAREN          reduce using rule 49 (expression -> HEX_INT .)
    $end            reduce using rule 49 (expression -> HEX_INT .)
    RPAREN          reduce using rule 49 (expression -> HEX_INT .)
    FALSE           reduce using rule 49 (expression -> HEX_INT .)
    NOT             reduce using rule 49 (expression -> HEX_INT .)
    DEC_INT         reduce using rule 49 (expression -> HEX_INT .)
    OCT_INT         reduce using rule 49 (expression -> HEX_INT .)
    HEX_INT         reduce using rule 49 (expression -> HEX_INT .)
    MXTRUE          reduce using rule 49 (expression -> HEX_INT .)
    MXFALSE         reduce using rule 49 (expression -> HEX_INT .)
    MXEQ            reduce using rule 49 (expression -> HEX_INT .)
    MXLT            reduce using rule 49 (expression -> HEX_INT .)
    MXGT            reduce using rule 49 (expression -> HEX_INT .)
    MXLTE           reduce using rule 49 (expression -> HEX_INT .)
    MXGTE           reduce using rule 49 (expression -> HEX_INT .)
    ELEQ            reduce using rule 49 (expression -> HEX_INT .)
    ELLT            reduce using rule 49 (expression -> HEX_INT .)
    ELGT            reduce using rule 49 (expression -> HEX_INT .)
    ELLTE           reduce using rule 49 (expression -> HEX_INT .)
    ELGTE           reduce using rule 49 (expression -> HEX_INT .)
    LOGITIZE        reduce using rule 49 (expression -> HEX_INT .)
    DIGITIZE        reduce using rule 49 (expression -> HEX_INT .)
    REDUCE          reduce using rule 49 (expression -> HEX_INT .)
    EXTEND          reduce using rule 49 (expression -> HEX_INT .)
    SIZE            reduce using rule 49 (expression -> HEX_INT .)
    RBRACKET        reduce using rule 49 (expression -> HEX_INT .)
    COMMA           reduce using rule 49 (expression -> HEX_INT .)
    STEP            reduce using rule 49 (expression -> HEX_INT .)


state 39

    (52) expression -> IDENTIFIER .

    TRUE            reduce using rule 52 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 52 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 52 (expression -> IDENTIFIER .)
    MULT            reduce using rule 52 (expression -> IDENTIFIER .)
    DIV             reduce using rule 52 (expression -> IDENTIFIER .)
    AND             reduce using rule 52 (expression -> IDENTIFIER .)
    VAR             reduce using rule 52 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 52 (expression -> IDENTIFIER .)
    MOVE            reduce using rule 52 (expression -> IDENTIFIER .)
    ROTATE          reduce using rule 52 (expression -> IDENTIFIER .)
    FOR             reduce using rule 52 (expression -> IDENTIFIER .)
    SWITCH          reduce using rule 52 (expression -> IDENTIFIER .)
    TASK            reduce using rule 52 (expression -> IDENTIFIER .)
    DO              reduce using rule 52 (expression -> IDENTIFIER .)
    GET             reduce using rule 52 (expression -> IDENTIFIER .)
    RESULT          reduce using rule 52 (expression -> IDENTIFIER .)
    LPAREN          reduce using rule 52 (expression -> IDENTIFIER .)
    $end            reduce using rule 52 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 52 (expression -> IDENTIFIER .)
    FALSE           reduce using rule 52 (expression -> IDENTIFIER .)
    NOT             reduce using rule 52 (expression -> IDENTIFIER .)
    DEC_INT         reduce using rule 52 (expression -> IDENTIFIER .)
    OCT_INT         reduce using rule 52 (expression -> IDENTIFIER .)
    HEX_INT         reduce using rule 52 (expression -> IDENTIFIER .)
    MXTRUE          reduce using rule 52 (expression -> IDENTIFIER .)
    MXFALSE         reduce using rule 52 (expression -> IDENTIFIER .)
    MXEQ            reduce using rule 52 (expression -> IDENTIFIER .)
    MXLT            reduce using rule 52 (expression -> IDENTIFIER .)
    MXGT            reduce using rule 52 (expression -> IDENTIFIER .)
    MXLTE           reduce using rule 52 (expression -> IDENTIFIER .)
    MXGTE           reduce using rule 52 (expression -> IDENTIFIER .)
    ELEQ            reduce using rule 52 (expression -> IDENTIFIER .)
    ELLT            reduce using rule 52 (expression -> IDENTIFIER .)
    ELGT            reduce using rule 52 (expression -> IDENTIFIER .)
    ELLTE           reduce using rule 52 (expression -> IDENTIFIER .)
    ELGTE           reduce using rule 52 (expression -> IDENTIFIER .)
    LOGITIZE        reduce using rule 52 (expression -> IDENTIFIER .)
    DIGITIZE        reduce using rule 52 (expression -> IDENTIFIER .)
    REDUCE          reduce using rule 52 (expression -> IDENTIFIER .)
    EXTEND          reduce using rule 52 (expression -> IDENTIFIER .)
    SIZE            reduce using rule 52 (expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 52 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 52 (expression -> IDENTIFIER .)
    STEP            reduce using rule 52 (expression -> IDENTIFIER .)


state 40

    (53) expression -> MXTRUE . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 75

state 41

    (54) expression -> MXFALSE . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 76

state 42

    (55) expression -> MXEQ . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 77

state 43

    (56) expression -> MXLT . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 78

state 44

    (57) expression -> MXGT . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 79

state 45

    (58) expression -> MXLTE . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 80

state 46

    (59) expression -> MXGTE . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 81

state 47

    (60) expression -> ELEQ . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 82

state 48

    (61) expression -> ELLT . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 83

state 49

    (62) expression -> ELGT . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 84

state 50

    (63) expression -> ELLTE . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 85

state 51

    (64) expression -> ELGTE . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 86

state 52

    (65) expression -> LOGITIZE . IDENTIFIER

    IDENTIFIER      shift and go to state 87


state 53

    (66) expression -> DIGITIZE . IDENTIFIER

    IDENTIFIER      shift and go to state 88


state 54

    (67) expression -> REDUCE . IDENTIFIER dimensions_opt

    IDENTIFIER      shift and go to state 89


state 55

    (68) expression -> EXTEND . IDENTIFIER dimensions_opt

    IDENTIFIER      shift and go to state 90


state 56

    (69) expression -> SIZE . LPAREN IDENTIFIER RPAREN

    LPAREN          shift and go to state 91


state 57

    (70) expression -> GET . ENVIRONMENT

    ENVIRONMENT     shift and go to state 92


state 58

    (28) function_definition -> TASK IDENTIFIER . parameter_list block
    (29) parameter_list -> .
    (30) parameter_list -> . parameter_list IDENTIFIER
    (31) parameter_list -> . IDENTIFIER

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    LPAREN          reduce using rule 29 (parameter_list -> .)
    VAR             reduce using rule 29 (parameter_list -> .)
    MOVE            reduce using rule 29 (parameter_list -> .)
    ROTATE          reduce using rule 29 (parameter_list -> .)
    FOR             reduce using rule 29 (parameter_list -> .)
    SWITCH          reduce using rule 29 (parameter_list -> .)
    TASK            reduce using rule 29 (parameter_list -> .)
    DO              reduce using rule 29 (parameter_list -> .)
    GET             reduce using rule 29 (parameter_list -> .)
    RESULT          reduce using rule 29 (parameter_list -> .)
    $end            reduce using rule 29 (parameter_list -> .)
    RPAREN          reduce using rule 29 (parameter_list -> .)
    FALSE           reduce using rule 29 (parameter_list -> .)
    IDENTIFIER      shift and go to state 93

  ! IDENTIFIER      [ reduce using rule 29 (parameter_list -> .) ]

    parameter_list                 shift and go to state 94

state 59

    (32) function_call -> DO IDENTIFIER . argument_list
    (33) argument_list -> .
    (34) argument_list -> . argument_list expression
    (35) argument_list -> . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DEC_INT resolved as shift
  ! shift/reduce conflict for OCT_INT resolved as shift
  ! shift/reduce conflict for HEX_INT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for MXTRUE resolved as shift
  ! shift/reduce conflict for MXFALSE resolved as shift
  ! shift/reduce conflict for MXEQ resolved as shift
  ! shift/reduce conflict for MXLT resolved as shift
  ! shift/reduce conflict for MXGT resolved as shift
  ! shift/reduce conflict for MXLTE resolved as shift
  ! shift/reduce conflict for MXGTE resolved as shift
  ! shift/reduce conflict for ELEQ resolved as shift
  ! shift/reduce conflict for ELLT resolved as shift
  ! shift/reduce conflict for ELGT resolved as shift
  ! shift/reduce conflict for ELLTE resolved as shift
  ! shift/reduce conflict for ELGTE resolved as shift
  ! shift/reduce conflict for LOGITIZE resolved as shift
  ! shift/reduce conflict for DIGITIZE resolved as shift
  ! shift/reduce conflict for REDUCE resolved as shift
  ! shift/reduce conflict for EXTEND resolved as shift
  ! shift/reduce conflict for SIZE resolved as shift
  ! shift/reduce conflict for GET resolved as shift
    VAR             reduce using rule 33 (argument_list -> .)
    MOVE            reduce using rule 33 (argument_list -> .)
    ROTATE          reduce using rule 33 (argument_list -> .)
    FOR             reduce using rule 33 (argument_list -> .)
    SWITCH          reduce using rule 33 (argument_list -> .)
    TASK            reduce using rule 33 (argument_list -> .)
    DO              reduce using rule 33 (argument_list -> .)
    RESULT          reduce using rule 33 (argument_list -> .)
    $end            reduce using rule 33 (argument_list -> .)
    RPAREN          reduce using rule 33 (argument_list -> .)
    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

  ! NOT             [ reduce using rule 33 (argument_list -> .) ]
  ! LPAREN          [ reduce using rule 33 (argument_list -> .) ]
  ! DEC_INT         [ reduce using rule 33 (argument_list -> .) ]
  ! OCT_INT         [ reduce using rule 33 (argument_list -> .) ]
  ! HEX_INT         [ reduce using rule 33 (argument_list -> .) ]
  ! TRUE            [ reduce using rule 33 (argument_list -> .) ]
  ! FALSE           [ reduce using rule 33 (argument_list -> .) ]
  ! IDENTIFIER      [ reduce using rule 33 (argument_list -> .) ]
  ! MXTRUE          [ reduce using rule 33 (argument_list -> .) ]
  ! MXFALSE         [ reduce using rule 33 (argument_list -> .) ]
  ! MXEQ            [ reduce using rule 33 (argument_list -> .) ]
  ! MXLT            [ reduce using rule 33 (argument_list -> .) ]
  ! MXGT            [ reduce using rule 33 (argument_list -> .) ]
  ! MXLTE           [ reduce using rule 33 (argument_list -> .) ]
  ! MXGTE           [ reduce using rule 33 (argument_list -> .) ]
  ! ELEQ            [ reduce using rule 33 (argument_list -> .) ]
  ! ELLT            [ reduce using rule 33 (argument_list -> .) ]
  ! ELGT            [ reduce using rule 33 (argument_list -> .) ]
  ! ELLTE           [ reduce using rule 33 (argument_list -> .) ]
  ! ELGTE           [ reduce using rule 33 (argument_list -> .) ]
  ! LOGITIZE        [ reduce using rule 33 (argument_list -> .) ]
  ! DIGITIZE        [ reduce using rule 33 (argument_list -> .) ]
  ! REDUCE          [ reduce using rule 33 (argument_list -> .) ]
  ! EXTEND          [ reduce using rule 33 (argument_list -> .) ]
  ! SIZE            [ reduce using rule 33 (argument_list -> .) ]
  ! GET             [ reduce using rule 33 (argument_list -> .) ]

    argument_list                  shift and go to state 95
    expression                     shift and go to state 96

state 60

    (36) get_result -> GET IDENTIFIER .

    VAR             reduce using rule 36 (get_result -> GET IDENTIFIER .)
    IDENTIFIER      reduce using rule 36 (get_result -> GET IDENTIFIER .)
    MOVE            reduce using rule 36 (get_result -> GET IDENTIFIER .)
    ROTATE          reduce using rule 36 (get_result -> GET IDENTIFIER .)
    FOR             reduce using rule 36 (get_result -> GET IDENTIFIER .)
    SWITCH          reduce using rule 36 (get_result -> GET IDENTIFIER .)
    TASK            reduce using rule 36 (get_result -> GET IDENTIFIER .)
    DO              reduce using rule 36 (get_result -> GET IDENTIFIER .)
    GET             reduce using rule 36 (get_result -> GET IDENTIFIER .)
    RESULT          reduce using rule 36 (get_result -> GET IDENTIFIER .)
    LPAREN          reduce using rule 36 (get_result -> GET IDENTIFIER .)
    $end            reduce using rule 36 (get_result -> GET IDENTIFIER .)
    RPAREN          reduce using rule 36 (get_result -> GET IDENTIFIER .)
    FALSE           reduce using rule 36 (get_result -> GET IDENTIFIER .)


state 61

    (37) result_statement -> RESULT IDENTIFIER .

    VAR             reduce using rule 37 (result_statement -> RESULT IDENTIFIER .)
    IDENTIFIER      reduce using rule 37 (result_statement -> RESULT IDENTIFIER .)
    MOVE            reduce using rule 37 (result_statement -> RESULT IDENTIFIER .)
    ROTATE          reduce using rule 37 (result_statement -> RESULT IDENTIFIER .)
    FOR             reduce using rule 37 (result_statement -> RESULT IDENTIFIER .)
    SWITCH          reduce using rule 37 (result_statement -> RESULT IDENTIFIER .)
    TASK            reduce using rule 37 (result_statement -> RESULT IDENTIFIER .)
    DO              reduce using rule 37 (result_statement -> RESULT IDENTIFIER .)
    GET             reduce using rule 37 (result_statement -> RESULT IDENTIFIER .)
    RESULT          reduce using rule 37 (result_statement -> RESULT IDENTIFIER .)
    LPAREN          reduce using rule 37 (result_statement -> RESULT IDENTIFIER .)
    $end            reduce using rule 37 (result_statement -> RESULT IDENTIFIER .)
    RPAREN          reduce using rule 37 (result_statement -> RESULT IDENTIFIER .)
    FALSE           reduce using rule 37 (result_statement -> RESULT IDENTIFIER .)


state 62

    (15) group_statements -> LPAREN statements . RPAREN
    (3) statements -> statements . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . move_command
    (7) statement -> . rotate_command
    (8) statement -> . for_loop
    (9) statement -> . switch_statement
    (10) statement -> . function_definition
    (11) statement -> . function_call
    (12) statement -> . get_result
    (13) statement -> . result_statement
    (14) statement -> . group_statements
    (16) var_declaration -> . VAR IDENTIFIER dimensions_opt ASSIGN expression
    (21) assignment -> . IDENTIFIER ASSIGN expression
    (22) move_command -> . MOVE
    (23) rotate_command -> . ROTATE LEFT
    (24) rotate_command -> . ROTATE RIGHT
    (25) for_loop -> . FOR IDENTIFIER BOUNDARY expression STEP expression block
    (26) switch_statement -> . SWITCH expression TRUE block FALSE block
    (27) switch_statement -> . SWITCH expression TRUE block
    (28) function_definition -> . TASK IDENTIFIER parameter_list block
    (32) function_call -> . DO IDENTIFIER argument_list
    (36) get_result -> . GET IDENTIFIER
    (37) result_statement -> . RESULT IDENTIFIER
    (15) group_statements -> . LPAREN statements RPAREN

    RPAREN          shift and go to state 97
    VAR             shift and go to state 15
    IDENTIFIER      shift and go to state 16
    MOVE            shift and go to state 17
    ROTATE          shift and go to state 18
    FOR             shift and go to state 19
    SWITCH          shift and go to state 20
    TASK            shift and go to state 21
    DO              shift and go to state 22
    GET             shift and go to state 23
    RESULT          shift and go to state 24
    LPAREN          shift and go to state 25

    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    move_command                   shift and go to state 6
    rotate_command                 shift and go to state 7
    for_loop                       shift and go to state 8
    switch_statement               shift and go to state 9
    function_definition            shift and go to state 10
    function_call                  shift and go to state 11
    get_result                     shift and go to state 12
    result_statement               shift and go to state 13
    group_statements               shift and go to state 14

state 63

    (16) var_declaration -> VAR IDENTIFIER dimensions_opt . ASSIGN expression

    ASSIGN          shift and go to state 98


state 64

    (18) dimensions_opt -> LBRACKET . dim_list RBRACKET
    (19) dim_list -> . dim_list COMMA expression
    (20) dim_list -> . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    dim_list                       shift and go to state 99
    expression                     shift and go to state 100

state 65

    (21) assignment -> IDENTIFIER ASSIGN expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    VAR             reduce using rule 21 (assignment -> IDENTIFIER ASSIGN expression .)
    IDENTIFIER      reduce using rule 21 (assignment -> IDENTIFIER ASSIGN expression .)
    MOVE            reduce using rule 21 (assignment -> IDENTIFIER ASSIGN expression .)
    ROTATE          reduce using rule 21 (assignment -> IDENTIFIER ASSIGN expression .)
    FOR             reduce using rule 21 (assignment -> IDENTIFIER ASSIGN expression .)
    SWITCH          reduce using rule 21 (assignment -> IDENTIFIER ASSIGN expression .)
    TASK            reduce using rule 21 (assignment -> IDENTIFIER ASSIGN expression .)
    DO              reduce using rule 21 (assignment -> IDENTIFIER ASSIGN expression .)
    GET             reduce using rule 21 (assignment -> IDENTIFIER ASSIGN expression .)
    RESULT          reduce using rule 21 (assignment -> IDENTIFIER ASSIGN expression .)
    LPAREN          reduce using rule 21 (assignment -> IDENTIFIER ASSIGN expression .)
    $end            reduce using rule 21 (assignment -> IDENTIFIER ASSIGN expression .)
    RPAREN          reduce using rule 21 (assignment -> IDENTIFIER ASSIGN expression .)
    FALSE           reduce using rule 21 (assignment -> IDENTIFIER ASSIGN expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72


state 66

    (25) for_loop -> FOR IDENTIFIER BOUNDARY . expression STEP expression block
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 101

state 67

    (26) switch_statement -> SWITCH expression TRUE . block FALSE block
    (27) switch_statement -> SWITCH expression TRUE . block
    (38) block -> . statements
    (39) block -> . group_statements
    (2) statements -> .
    (3) statements -> . statements statement
    (15) group_statements -> . LPAREN statements RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    VAR             reduce using rule 2 (statements -> .)
    IDENTIFIER      reduce using rule 2 (statements -> .)
    MOVE            reduce using rule 2 (statements -> .)
    ROTATE          reduce using rule 2 (statements -> .)
    FOR             reduce using rule 2 (statements -> .)
    SWITCH          reduce using rule 2 (statements -> .)
    TASK            reduce using rule 2 (statements -> .)
    DO              reduce using rule 2 (statements -> .)
    GET             reduce using rule 2 (statements -> .)
    RESULT          reduce using rule 2 (statements -> .)
    FALSE           reduce using rule 2 (statements -> .)
    $end            reduce using rule 2 (statements -> .)
    RPAREN          reduce using rule 2 (statements -> .)
    LPAREN          shift and go to state 25

  ! LPAREN          [ reduce using rule 2 (statements -> .) ]

    block                          shift and go to state 102
    statements                     shift and go to state 103
    group_statements               shift and go to state 104

state 68

    (40) expression -> expression PLUS . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 105

state 69

    (41) expression -> expression MINUS . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 106

state 70

    (42) expression -> expression MULT . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 107

state 71

    (43) expression -> expression DIV . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 108

state 72

    (44) expression -> expression AND . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 109

state 73

    (45) expression -> NOT expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    TRUE            reduce using rule 45 (expression -> NOT expression .)
    AND             reduce using rule 45 (expression -> NOT expression .)
    VAR             reduce using rule 45 (expression -> NOT expression .)
    IDENTIFIER      reduce using rule 45 (expression -> NOT expression .)
    MOVE            reduce using rule 45 (expression -> NOT expression .)
    ROTATE          reduce using rule 45 (expression -> NOT expression .)
    FOR             reduce using rule 45 (expression -> NOT expression .)
    SWITCH          reduce using rule 45 (expression -> NOT expression .)
    TASK            reduce using rule 45 (expression -> NOT expression .)
    DO              reduce using rule 45 (expression -> NOT expression .)
    GET             reduce using rule 45 (expression -> NOT expression .)
    RESULT          reduce using rule 45 (expression -> NOT expression .)
    LPAREN          reduce using rule 45 (expression -> NOT expression .)
    $end            reduce using rule 45 (expression -> NOT expression .)
    RPAREN          reduce using rule 45 (expression -> NOT expression .)
    FALSE           reduce using rule 45 (expression -> NOT expression .)
    NOT             reduce using rule 45 (expression -> NOT expression .)
    DEC_INT         reduce using rule 45 (expression -> NOT expression .)
    OCT_INT         reduce using rule 45 (expression -> NOT expression .)
    HEX_INT         reduce using rule 45 (expression -> NOT expression .)
    MXTRUE          reduce using rule 45 (expression -> NOT expression .)
    MXFALSE         reduce using rule 45 (expression -> NOT expression .)
    MXEQ            reduce using rule 45 (expression -> NOT expression .)
    MXLT            reduce using rule 45 (expression -> NOT expression .)
    MXGT            reduce using rule 45 (expression -> NOT expression .)
    MXLTE           reduce using rule 45 (expression -> NOT expression .)
    MXGTE           reduce using rule 45 (expression -> NOT expression .)
    ELEQ            reduce using rule 45 (expression -> NOT expression .)
    ELLT            reduce using rule 45 (expression -> NOT expression .)
    ELGT            reduce using rule 45 (expression -> NOT expression .)
    ELLTE           reduce using rule 45 (expression -> NOT expression .)
    ELGTE           reduce using rule 45 (expression -> NOT expression .)
    LOGITIZE        reduce using rule 45 (expression -> NOT expression .)
    DIGITIZE        reduce using rule 45 (expression -> NOT expression .)
    REDUCE          reduce using rule 45 (expression -> NOT expression .)
    EXTEND          reduce using rule 45 (expression -> NOT expression .)
    SIZE            reduce using rule 45 (expression -> NOT expression .)
    RBRACKET        reduce using rule 45 (expression -> NOT expression .)
    COMMA           reduce using rule 45 (expression -> NOT expression .)
    STEP            reduce using rule 45 (expression -> NOT expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71

  ! PLUS            [ reduce using rule 45 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> NOT expression .) ]
  ! MULT            [ reduce using rule 45 (expression -> NOT expression .) ]
  ! DIV             [ reduce using rule 45 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 72 ]


state 74

    (46) expression -> LPAREN expression . RPAREN
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    RPAREN          shift and go to state 110
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72


state 75

    (53) expression -> MXTRUE expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    TRUE            reduce using rule 53 (expression -> MXTRUE expression .)
    VAR             reduce using rule 53 (expression -> MXTRUE expression .)
    IDENTIFIER      reduce using rule 53 (expression -> MXTRUE expression .)
    MOVE            reduce using rule 53 (expression -> MXTRUE expression .)
    ROTATE          reduce using rule 53 (expression -> MXTRUE expression .)
    FOR             reduce using rule 53 (expression -> MXTRUE expression .)
    SWITCH          reduce using rule 53 (expression -> MXTRUE expression .)
    TASK            reduce using rule 53 (expression -> MXTRUE expression .)
    DO              reduce using rule 53 (expression -> MXTRUE expression .)
    GET             reduce using rule 53 (expression -> MXTRUE expression .)
    RESULT          reduce using rule 53 (expression -> MXTRUE expression .)
    LPAREN          reduce using rule 53 (expression -> MXTRUE expression .)
    $end            reduce using rule 53 (expression -> MXTRUE expression .)
    RPAREN          reduce using rule 53 (expression -> MXTRUE expression .)
    FALSE           reduce using rule 53 (expression -> MXTRUE expression .)
    NOT             reduce using rule 53 (expression -> MXTRUE expression .)
    DEC_INT         reduce using rule 53 (expression -> MXTRUE expression .)
    OCT_INT         reduce using rule 53 (expression -> MXTRUE expression .)
    HEX_INT         reduce using rule 53 (expression -> MXTRUE expression .)
    MXTRUE          reduce using rule 53 (expression -> MXTRUE expression .)
    MXFALSE         reduce using rule 53 (expression -> MXTRUE expression .)
    MXEQ            reduce using rule 53 (expression -> MXTRUE expression .)
    MXLT            reduce using rule 53 (expression -> MXTRUE expression .)
    MXGT            reduce using rule 53 (expression -> MXTRUE expression .)
    MXLTE           reduce using rule 53 (expression -> MXTRUE expression .)
    MXGTE           reduce using rule 53 (expression -> MXTRUE expression .)
    ELEQ            reduce using rule 53 (expression -> MXTRUE expression .)
    ELLT            reduce using rule 53 (expression -> MXTRUE expression .)
    ELGT            reduce using rule 53 (expression -> MXTRUE expression .)
    ELLTE           reduce using rule 53 (expression -> MXTRUE expression .)
    ELGTE           reduce using rule 53 (expression -> MXTRUE expression .)
    LOGITIZE        reduce using rule 53 (expression -> MXTRUE expression .)
    DIGITIZE        reduce using rule 53 (expression -> MXTRUE expression .)
    REDUCE          reduce using rule 53 (expression -> MXTRUE expression .)
    EXTEND          reduce using rule 53 (expression -> MXTRUE expression .)
    SIZE            reduce using rule 53 (expression -> MXTRUE expression .)
    RBRACKET        reduce using rule 53 (expression -> MXTRUE expression .)
    COMMA           reduce using rule 53 (expression -> MXTRUE expression .)
    STEP            reduce using rule 53 (expression -> MXTRUE expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72

  ! PLUS            [ reduce using rule 53 (expression -> MXTRUE expression .) ]
  ! MINUS           [ reduce using rule 53 (expression -> MXTRUE expression .) ]
  ! MULT            [ reduce using rule 53 (expression -> MXTRUE expression .) ]
  ! DIV             [ reduce using rule 53 (expression -> MXTRUE expression .) ]
  ! AND             [ reduce using rule 53 (expression -> MXTRUE expression .) ]


state 76

    (54) expression -> MXFALSE expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    TRUE            reduce using rule 54 (expression -> MXFALSE expression .)
    VAR             reduce using rule 54 (expression -> MXFALSE expression .)
    IDENTIFIER      reduce using rule 54 (expression -> MXFALSE expression .)
    MOVE            reduce using rule 54 (expression -> MXFALSE expression .)
    ROTATE          reduce using rule 54 (expression -> MXFALSE expression .)
    FOR             reduce using rule 54 (expression -> MXFALSE expression .)
    SWITCH          reduce using rule 54 (expression -> MXFALSE expression .)
    TASK            reduce using rule 54 (expression -> MXFALSE expression .)
    DO              reduce using rule 54 (expression -> MXFALSE expression .)
    GET             reduce using rule 54 (expression -> MXFALSE expression .)
    RESULT          reduce using rule 54 (expression -> MXFALSE expression .)
    LPAREN          reduce using rule 54 (expression -> MXFALSE expression .)
    $end            reduce using rule 54 (expression -> MXFALSE expression .)
    RPAREN          reduce using rule 54 (expression -> MXFALSE expression .)
    FALSE           reduce using rule 54 (expression -> MXFALSE expression .)
    NOT             reduce using rule 54 (expression -> MXFALSE expression .)
    DEC_INT         reduce using rule 54 (expression -> MXFALSE expression .)
    OCT_INT         reduce using rule 54 (expression -> MXFALSE expression .)
    HEX_INT         reduce using rule 54 (expression -> MXFALSE expression .)
    MXTRUE          reduce using rule 54 (expression -> MXFALSE expression .)
    MXFALSE         reduce using rule 54 (expression -> MXFALSE expression .)
    MXEQ            reduce using rule 54 (expression -> MXFALSE expression .)
    MXLT            reduce using rule 54 (expression -> MXFALSE expression .)
    MXGT            reduce using rule 54 (expression -> MXFALSE expression .)
    MXLTE           reduce using rule 54 (expression -> MXFALSE expression .)
    MXGTE           reduce using rule 54 (expression -> MXFALSE expression .)
    ELEQ            reduce using rule 54 (expression -> MXFALSE expression .)
    ELLT            reduce using rule 54 (expression -> MXFALSE expression .)
    ELGT            reduce using rule 54 (expression -> MXFALSE expression .)
    ELLTE           reduce using rule 54 (expression -> MXFALSE expression .)
    ELGTE           reduce using rule 54 (expression -> MXFALSE expression .)
    LOGITIZE        reduce using rule 54 (expression -> MXFALSE expression .)
    DIGITIZE        reduce using rule 54 (expression -> MXFALSE expression .)
    REDUCE          reduce using rule 54 (expression -> MXFALSE expression .)
    EXTEND          reduce using rule 54 (expression -> MXFALSE expression .)
    SIZE            reduce using rule 54 (expression -> MXFALSE expression .)
    RBRACKET        reduce using rule 54 (expression -> MXFALSE expression .)
    COMMA           reduce using rule 54 (expression -> MXFALSE expression .)
    STEP            reduce using rule 54 (expression -> MXFALSE expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72

  ! PLUS            [ reduce using rule 54 (expression -> MXFALSE expression .) ]
  ! MINUS           [ reduce using rule 54 (expression -> MXFALSE expression .) ]
  ! MULT            [ reduce using rule 54 (expression -> MXFALSE expression .) ]
  ! DIV             [ reduce using rule 54 (expression -> MXFALSE expression .) ]
  ! AND             [ reduce using rule 54 (expression -> MXFALSE expression .) ]


state 77

    (55) expression -> MXEQ expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    TRUE            reduce using rule 55 (expression -> MXEQ expression .)
    VAR             reduce using rule 55 (expression -> MXEQ expression .)
    IDENTIFIER      reduce using rule 55 (expression -> MXEQ expression .)
    MOVE            reduce using rule 55 (expression -> MXEQ expression .)
    ROTATE          reduce using rule 55 (expression -> MXEQ expression .)
    FOR             reduce using rule 55 (expression -> MXEQ expression .)
    SWITCH          reduce using rule 55 (expression -> MXEQ expression .)
    TASK            reduce using rule 55 (expression -> MXEQ expression .)
    DO              reduce using rule 55 (expression -> MXEQ expression .)
    GET             reduce using rule 55 (expression -> MXEQ expression .)
    RESULT          reduce using rule 55 (expression -> MXEQ expression .)
    LPAREN          reduce using rule 55 (expression -> MXEQ expression .)
    $end            reduce using rule 55 (expression -> MXEQ expression .)
    RPAREN          reduce using rule 55 (expression -> MXEQ expression .)
    FALSE           reduce using rule 55 (expression -> MXEQ expression .)
    NOT             reduce using rule 55 (expression -> MXEQ expression .)
    DEC_INT         reduce using rule 55 (expression -> MXEQ expression .)
    OCT_INT         reduce using rule 55 (expression -> MXEQ expression .)
    HEX_INT         reduce using rule 55 (expression -> MXEQ expression .)
    MXTRUE          reduce using rule 55 (expression -> MXEQ expression .)
    MXFALSE         reduce using rule 55 (expression -> MXEQ expression .)
    MXEQ            reduce using rule 55 (expression -> MXEQ expression .)
    MXLT            reduce using rule 55 (expression -> MXEQ expression .)
    MXGT            reduce using rule 55 (expression -> MXEQ expression .)
    MXLTE           reduce using rule 55 (expression -> MXEQ expression .)
    MXGTE           reduce using rule 55 (expression -> MXEQ expression .)
    ELEQ            reduce using rule 55 (expression -> MXEQ expression .)
    ELLT            reduce using rule 55 (expression -> MXEQ expression .)
    ELGT            reduce using rule 55 (expression -> MXEQ expression .)
    ELLTE           reduce using rule 55 (expression -> MXEQ expression .)
    ELGTE           reduce using rule 55 (expression -> MXEQ expression .)
    LOGITIZE        reduce using rule 55 (expression -> MXEQ expression .)
    DIGITIZE        reduce using rule 55 (expression -> MXEQ expression .)
    REDUCE          reduce using rule 55 (expression -> MXEQ expression .)
    EXTEND          reduce using rule 55 (expression -> MXEQ expression .)
    SIZE            reduce using rule 55 (expression -> MXEQ expression .)
    RBRACKET        reduce using rule 55 (expression -> MXEQ expression .)
    COMMA           reduce using rule 55 (expression -> MXEQ expression .)
    STEP            reduce using rule 55 (expression -> MXEQ expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72

  ! PLUS            [ reduce using rule 55 (expression -> MXEQ expression .) ]
  ! MINUS           [ reduce using rule 55 (expression -> MXEQ expression .) ]
  ! MULT            [ reduce using rule 55 (expression -> MXEQ expression .) ]
  ! DIV             [ reduce using rule 55 (expression -> MXEQ expression .) ]
  ! AND             [ reduce using rule 55 (expression -> MXEQ expression .) ]


state 78

    (56) expression -> MXLT expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    TRUE            reduce using rule 56 (expression -> MXLT expression .)
    VAR             reduce using rule 56 (expression -> MXLT expression .)
    IDENTIFIER      reduce using rule 56 (expression -> MXLT expression .)
    MOVE            reduce using rule 56 (expression -> MXLT expression .)
    ROTATE          reduce using rule 56 (expression -> MXLT expression .)
    FOR             reduce using rule 56 (expression -> MXLT expression .)
    SWITCH          reduce using rule 56 (expression -> MXLT expression .)
    TASK            reduce using rule 56 (expression -> MXLT expression .)
    DO              reduce using rule 56 (expression -> MXLT expression .)
    GET             reduce using rule 56 (expression -> MXLT expression .)
    RESULT          reduce using rule 56 (expression -> MXLT expression .)
    LPAREN          reduce using rule 56 (expression -> MXLT expression .)
    $end            reduce using rule 56 (expression -> MXLT expression .)
    RPAREN          reduce using rule 56 (expression -> MXLT expression .)
    FALSE           reduce using rule 56 (expression -> MXLT expression .)
    NOT             reduce using rule 56 (expression -> MXLT expression .)
    DEC_INT         reduce using rule 56 (expression -> MXLT expression .)
    OCT_INT         reduce using rule 56 (expression -> MXLT expression .)
    HEX_INT         reduce using rule 56 (expression -> MXLT expression .)
    MXTRUE          reduce using rule 56 (expression -> MXLT expression .)
    MXFALSE         reduce using rule 56 (expression -> MXLT expression .)
    MXEQ            reduce using rule 56 (expression -> MXLT expression .)
    MXLT            reduce using rule 56 (expression -> MXLT expression .)
    MXGT            reduce using rule 56 (expression -> MXLT expression .)
    MXLTE           reduce using rule 56 (expression -> MXLT expression .)
    MXGTE           reduce using rule 56 (expression -> MXLT expression .)
    ELEQ            reduce using rule 56 (expression -> MXLT expression .)
    ELLT            reduce using rule 56 (expression -> MXLT expression .)
    ELGT            reduce using rule 56 (expression -> MXLT expression .)
    ELLTE           reduce using rule 56 (expression -> MXLT expression .)
    ELGTE           reduce using rule 56 (expression -> MXLT expression .)
    LOGITIZE        reduce using rule 56 (expression -> MXLT expression .)
    DIGITIZE        reduce using rule 56 (expression -> MXLT expression .)
    REDUCE          reduce using rule 56 (expression -> MXLT expression .)
    EXTEND          reduce using rule 56 (expression -> MXLT expression .)
    SIZE            reduce using rule 56 (expression -> MXLT expression .)
    RBRACKET        reduce using rule 56 (expression -> MXLT expression .)
    COMMA           reduce using rule 56 (expression -> MXLT expression .)
    STEP            reduce using rule 56 (expression -> MXLT expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72

  ! PLUS            [ reduce using rule 56 (expression -> MXLT expression .) ]
  ! MINUS           [ reduce using rule 56 (expression -> MXLT expression .) ]
  ! MULT            [ reduce using rule 56 (expression -> MXLT expression .) ]
  ! DIV             [ reduce using rule 56 (expression -> MXLT expression .) ]
  ! AND             [ reduce using rule 56 (expression -> MXLT expression .) ]


state 79

    (57) expression -> MXGT expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    TRUE            reduce using rule 57 (expression -> MXGT expression .)
    VAR             reduce using rule 57 (expression -> MXGT expression .)
    IDENTIFIER      reduce using rule 57 (expression -> MXGT expression .)
    MOVE            reduce using rule 57 (expression -> MXGT expression .)
    ROTATE          reduce using rule 57 (expression -> MXGT expression .)
    FOR             reduce using rule 57 (expression -> MXGT expression .)
    SWITCH          reduce using rule 57 (expression -> MXGT expression .)
    TASK            reduce using rule 57 (expression -> MXGT expression .)
    DO              reduce using rule 57 (expression -> MXGT expression .)
    GET             reduce using rule 57 (expression -> MXGT expression .)
    RESULT          reduce using rule 57 (expression -> MXGT expression .)
    LPAREN          reduce using rule 57 (expression -> MXGT expression .)
    $end            reduce using rule 57 (expression -> MXGT expression .)
    RPAREN          reduce using rule 57 (expression -> MXGT expression .)
    FALSE           reduce using rule 57 (expression -> MXGT expression .)
    NOT             reduce using rule 57 (expression -> MXGT expression .)
    DEC_INT         reduce using rule 57 (expression -> MXGT expression .)
    OCT_INT         reduce using rule 57 (expression -> MXGT expression .)
    HEX_INT         reduce using rule 57 (expression -> MXGT expression .)
    MXTRUE          reduce using rule 57 (expression -> MXGT expression .)
    MXFALSE         reduce using rule 57 (expression -> MXGT expression .)
    MXEQ            reduce using rule 57 (expression -> MXGT expression .)
    MXLT            reduce using rule 57 (expression -> MXGT expression .)
    MXGT            reduce using rule 57 (expression -> MXGT expression .)
    MXLTE           reduce using rule 57 (expression -> MXGT expression .)
    MXGTE           reduce using rule 57 (expression -> MXGT expression .)
    ELEQ            reduce using rule 57 (expression -> MXGT expression .)
    ELLT            reduce using rule 57 (expression -> MXGT expression .)
    ELGT            reduce using rule 57 (expression -> MXGT expression .)
    ELLTE           reduce using rule 57 (expression -> MXGT expression .)
    ELGTE           reduce using rule 57 (expression -> MXGT expression .)
    LOGITIZE        reduce using rule 57 (expression -> MXGT expression .)
    DIGITIZE        reduce using rule 57 (expression -> MXGT expression .)
    REDUCE          reduce using rule 57 (expression -> MXGT expression .)
    EXTEND          reduce using rule 57 (expression -> MXGT expression .)
    SIZE            reduce using rule 57 (expression -> MXGT expression .)
    RBRACKET        reduce using rule 57 (expression -> MXGT expression .)
    COMMA           reduce using rule 57 (expression -> MXGT expression .)
    STEP            reduce using rule 57 (expression -> MXGT expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72

  ! PLUS            [ reduce using rule 57 (expression -> MXGT expression .) ]
  ! MINUS           [ reduce using rule 57 (expression -> MXGT expression .) ]
  ! MULT            [ reduce using rule 57 (expression -> MXGT expression .) ]
  ! DIV             [ reduce using rule 57 (expression -> MXGT expression .) ]
  ! AND             [ reduce using rule 57 (expression -> MXGT expression .) ]


state 80

    (58) expression -> MXLTE expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    TRUE            reduce using rule 58 (expression -> MXLTE expression .)
    VAR             reduce using rule 58 (expression -> MXLTE expression .)
    IDENTIFIER      reduce using rule 58 (expression -> MXLTE expression .)
    MOVE            reduce using rule 58 (expression -> MXLTE expression .)
    ROTATE          reduce using rule 58 (expression -> MXLTE expression .)
    FOR             reduce using rule 58 (expression -> MXLTE expression .)
    SWITCH          reduce using rule 58 (expression -> MXLTE expression .)
    TASK            reduce using rule 58 (expression -> MXLTE expression .)
    DO              reduce using rule 58 (expression -> MXLTE expression .)
    GET             reduce using rule 58 (expression -> MXLTE expression .)
    RESULT          reduce using rule 58 (expression -> MXLTE expression .)
    LPAREN          reduce using rule 58 (expression -> MXLTE expression .)
    $end            reduce using rule 58 (expression -> MXLTE expression .)
    RPAREN          reduce using rule 58 (expression -> MXLTE expression .)
    FALSE           reduce using rule 58 (expression -> MXLTE expression .)
    NOT             reduce using rule 58 (expression -> MXLTE expression .)
    DEC_INT         reduce using rule 58 (expression -> MXLTE expression .)
    OCT_INT         reduce using rule 58 (expression -> MXLTE expression .)
    HEX_INT         reduce using rule 58 (expression -> MXLTE expression .)
    MXTRUE          reduce using rule 58 (expression -> MXLTE expression .)
    MXFALSE         reduce using rule 58 (expression -> MXLTE expression .)
    MXEQ            reduce using rule 58 (expression -> MXLTE expression .)
    MXLT            reduce using rule 58 (expression -> MXLTE expression .)
    MXGT            reduce using rule 58 (expression -> MXLTE expression .)
    MXLTE           reduce using rule 58 (expression -> MXLTE expression .)
    MXGTE           reduce using rule 58 (expression -> MXLTE expression .)
    ELEQ            reduce using rule 58 (expression -> MXLTE expression .)
    ELLT            reduce using rule 58 (expression -> MXLTE expression .)
    ELGT            reduce using rule 58 (expression -> MXLTE expression .)
    ELLTE           reduce using rule 58 (expression -> MXLTE expression .)
    ELGTE           reduce using rule 58 (expression -> MXLTE expression .)
    LOGITIZE        reduce using rule 58 (expression -> MXLTE expression .)
    DIGITIZE        reduce using rule 58 (expression -> MXLTE expression .)
    REDUCE          reduce using rule 58 (expression -> MXLTE expression .)
    EXTEND          reduce using rule 58 (expression -> MXLTE expression .)
    SIZE            reduce using rule 58 (expression -> MXLTE expression .)
    RBRACKET        reduce using rule 58 (expression -> MXLTE expression .)
    COMMA           reduce using rule 58 (expression -> MXLTE expression .)
    STEP            reduce using rule 58 (expression -> MXLTE expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72

  ! PLUS            [ reduce using rule 58 (expression -> MXLTE expression .) ]
  ! MINUS           [ reduce using rule 58 (expression -> MXLTE expression .) ]
  ! MULT            [ reduce using rule 58 (expression -> MXLTE expression .) ]
  ! DIV             [ reduce using rule 58 (expression -> MXLTE expression .) ]
  ! AND             [ reduce using rule 58 (expression -> MXLTE expression .) ]


state 81

    (59) expression -> MXGTE expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    TRUE            reduce using rule 59 (expression -> MXGTE expression .)
    VAR             reduce using rule 59 (expression -> MXGTE expression .)
    IDENTIFIER      reduce using rule 59 (expression -> MXGTE expression .)
    MOVE            reduce using rule 59 (expression -> MXGTE expression .)
    ROTATE          reduce using rule 59 (expression -> MXGTE expression .)
    FOR             reduce using rule 59 (expression -> MXGTE expression .)
    SWITCH          reduce using rule 59 (expression -> MXGTE expression .)
    TASK            reduce using rule 59 (expression -> MXGTE expression .)
    DO              reduce using rule 59 (expression -> MXGTE expression .)
    GET             reduce using rule 59 (expression -> MXGTE expression .)
    RESULT          reduce using rule 59 (expression -> MXGTE expression .)
    LPAREN          reduce using rule 59 (expression -> MXGTE expression .)
    $end            reduce using rule 59 (expression -> MXGTE expression .)
    RPAREN          reduce using rule 59 (expression -> MXGTE expression .)
    FALSE           reduce using rule 59 (expression -> MXGTE expression .)
    NOT             reduce using rule 59 (expression -> MXGTE expression .)
    DEC_INT         reduce using rule 59 (expression -> MXGTE expression .)
    OCT_INT         reduce using rule 59 (expression -> MXGTE expression .)
    HEX_INT         reduce using rule 59 (expression -> MXGTE expression .)
    MXTRUE          reduce using rule 59 (expression -> MXGTE expression .)
    MXFALSE         reduce using rule 59 (expression -> MXGTE expression .)
    MXEQ            reduce using rule 59 (expression -> MXGTE expression .)
    MXLT            reduce using rule 59 (expression -> MXGTE expression .)
    MXGT            reduce using rule 59 (expression -> MXGTE expression .)
    MXLTE           reduce using rule 59 (expression -> MXGTE expression .)
    MXGTE           reduce using rule 59 (expression -> MXGTE expression .)
    ELEQ            reduce using rule 59 (expression -> MXGTE expression .)
    ELLT            reduce using rule 59 (expression -> MXGTE expression .)
    ELGT            reduce using rule 59 (expression -> MXGTE expression .)
    ELLTE           reduce using rule 59 (expression -> MXGTE expression .)
    ELGTE           reduce using rule 59 (expression -> MXGTE expression .)
    LOGITIZE        reduce using rule 59 (expression -> MXGTE expression .)
    DIGITIZE        reduce using rule 59 (expression -> MXGTE expression .)
    REDUCE          reduce using rule 59 (expression -> MXGTE expression .)
    EXTEND          reduce using rule 59 (expression -> MXGTE expression .)
    SIZE            reduce using rule 59 (expression -> MXGTE expression .)
    RBRACKET        reduce using rule 59 (expression -> MXGTE expression .)
    COMMA           reduce using rule 59 (expression -> MXGTE expression .)
    STEP            reduce using rule 59 (expression -> MXGTE expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72

  ! PLUS            [ reduce using rule 59 (expression -> MXGTE expression .) ]
  ! MINUS           [ reduce using rule 59 (expression -> MXGTE expression .) ]
  ! MULT            [ reduce using rule 59 (expression -> MXGTE expression .) ]
  ! DIV             [ reduce using rule 59 (expression -> MXGTE expression .) ]
  ! AND             [ reduce using rule 59 (expression -> MXGTE expression .) ]


state 82

    (60) expression -> ELEQ expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    TRUE            reduce using rule 60 (expression -> ELEQ expression .)
    VAR             reduce using rule 60 (expression -> ELEQ expression .)
    IDENTIFIER      reduce using rule 60 (expression -> ELEQ expression .)
    MOVE            reduce using rule 60 (expression -> ELEQ expression .)
    ROTATE          reduce using rule 60 (expression -> ELEQ expression .)
    FOR             reduce using rule 60 (expression -> ELEQ expression .)
    SWITCH          reduce using rule 60 (expression -> ELEQ expression .)
    TASK            reduce using rule 60 (expression -> ELEQ expression .)
    DO              reduce using rule 60 (expression -> ELEQ expression .)
    GET             reduce using rule 60 (expression -> ELEQ expression .)
    RESULT          reduce using rule 60 (expression -> ELEQ expression .)
    LPAREN          reduce using rule 60 (expression -> ELEQ expression .)
    $end            reduce using rule 60 (expression -> ELEQ expression .)
    RPAREN          reduce using rule 60 (expression -> ELEQ expression .)
    FALSE           reduce using rule 60 (expression -> ELEQ expression .)
    NOT             reduce using rule 60 (expression -> ELEQ expression .)
    DEC_INT         reduce using rule 60 (expression -> ELEQ expression .)
    OCT_INT         reduce using rule 60 (expression -> ELEQ expression .)
    HEX_INT         reduce using rule 60 (expression -> ELEQ expression .)
    MXTRUE          reduce using rule 60 (expression -> ELEQ expression .)
    MXFALSE         reduce using rule 60 (expression -> ELEQ expression .)
    MXEQ            reduce using rule 60 (expression -> ELEQ expression .)
    MXLT            reduce using rule 60 (expression -> ELEQ expression .)
    MXGT            reduce using rule 60 (expression -> ELEQ expression .)
    MXLTE           reduce using rule 60 (expression -> ELEQ expression .)
    MXGTE           reduce using rule 60 (expression -> ELEQ expression .)
    ELEQ            reduce using rule 60 (expression -> ELEQ expression .)
    ELLT            reduce using rule 60 (expression -> ELEQ expression .)
    ELGT            reduce using rule 60 (expression -> ELEQ expression .)
    ELLTE           reduce using rule 60 (expression -> ELEQ expression .)
    ELGTE           reduce using rule 60 (expression -> ELEQ expression .)
    LOGITIZE        reduce using rule 60 (expression -> ELEQ expression .)
    DIGITIZE        reduce using rule 60 (expression -> ELEQ expression .)
    REDUCE          reduce using rule 60 (expression -> ELEQ expression .)
    EXTEND          reduce using rule 60 (expression -> ELEQ expression .)
    SIZE            reduce using rule 60 (expression -> ELEQ expression .)
    RBRACKET        reduce using rule 60 (expression -> ELEQ expression .)
    COMMA           reduce using rule 60 (expression -> ELEQ expression .)
    STEP            reduce using rule 60 (expression -> ELEQ expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72

  ! PLUS            [ reduce using rule 60 (expression -> ELEQ expression .) ]
  ! MINUS           [ reduce using rule 60 (expression -> ELEQ expression .) ]
  ! MULT            [ reduce using rule 60 (expression -> ELEQ expression .) ]
  ! DIV             [ reduce using rule 60 (expression -> ELEQ expression .) ]
  ! AND             [ reduce using rule 60 (expression -> ELEQ expression .) ]


state 83

    (61) expression -> ELLT expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    TRUE            reduce using rule 61 (expression -> ELLT expression .)
    VAR             reduce using rule 61 (expression -> ELLT expression .)
    IDENTIFIER      reduce using rule 61 (expression -> ELLT expression .)
    MOVE            reduce using rule 61 (expression -> ELLT expression .)
    ROTATE          reduce using rule 61 (expression -> ELLT expression .)
    FOR             reduce using rule 61 (expression -> ELLT expression .)
    SWITCH          reduce using rule 61 (expression -> ELLT expression .)
    TASK            reduce using rule 61 (expression -> ELLT expression .)
    DO              reduce using rule 61 (expression -> ELLT expression .)
    GET             reduce using rule 61 (expression -> ELLT expression .)
    RESULT          reduce using rule 61 (expression -> ELLT expression .)
    LPAREN          reduce using rule 61 (expression -> ELLT expression .)
    $end            reduce using rule 61 (expression -> ELLT expression .)
    RPAREN          reduce using rule 61 (expression -> ELLT expression .)
    FALSE           reduce using rule 61 (expression -> ELLT expression .)
    NOT             reduce using rule 61 (expression -> ELLT expression .)
    DEC_INT         reduce using rule 61 (expression -> ELLT expression .)
    OCT_INT         reduce using rule 61 (expression -> ELLT expression .)
    HEX_INT         reduce using rule 61 (expression -> ELLT expression .)
    MXTRUE          reduce using rule 61 (expression -> ELLT expression .)
    MXFALSE         reduce using rule 61 (expression -> ELLT expression .)
    MXEQ            reduce using rule 61 (expression -> ELLT expression .)
    MXLT            reduce using rule 61 (expression -> ELLT expression .)
    MXGT            reduce using rule 61 (expression -> ELLT expression .)
    MXLTE           reduce using rule 61 (expression -> ELLT expression .)
    MXGTE           reduce using rule 61 (expression -> ELLT expression .)
    ELEQ            reduce using rule 61 (expression -> ELLT expression .)
    ELLT            reduce using rule 61 (expression -> ELLT expression .)
    ELGT            reduce using rule 61 (expression -> ELLT expression .)
    ELLTE           reduce using rule 61 (expression -> ELLT expression .)
    ELGTE           reduce using rule 61 (expression -> ELLT expression .)
    LOGITIZE        reduce using rule 61 (expression -> ELLT expression .)
    DIGITIZE        reduce using rule 61 (expression -> ELLT expression .)
    REDUCE          reduce using rule 61 (expression -> ELLT expression .)
    EXTEND          reduce using rule 61 (expression -> ELLT expression .)
    SIZE            reduce using rule 61 (expression -> ELLT expression .)
    RBRACKET        reduce using rule 61 (expression -> ELLT expression .)
    COMMA           reduce using rule 61 (expression -> ELLT expression .)
    STEP            reduce using rule 61 (expression -> ELLT expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72

  ! PLUS            [ reduce using rule 61 (expression -> ELLT expression .) ]
  ! MINUS           [ reduce using rule 61 (expression -> ELLT expression .) ]
  ! MULT            [ reduce using rule 61 (expression -> ELLT expression .) ]
  ! DIV             [ reduce using rule 61 (expression -> ELLT expression .) ]
  ! AND             [ reduce using rule 61 (expression -> ELLT expression .) ]


state 84

    (62) expression -> ELGT expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    TRUE            reduce using rule 62 (expression -> ELGT expression .)
    VAR             reduce using rule 62 (expression -> ELGT expression .)
    IDENTIFIER      reduce using rule 62 (expression -> ELGT expression .)
    MOVE            reduce using rule 62 (expression -> ELGT expression .)
    ROTATE          reduce using rule 62 (expression -> ELGT expression .)
    FOR             reduce using rule 62 (expression -> ELGT expression .)
    SWITCH          reduce using rule 62 (expression -> ELGT expression .)
    TASK            reduce using rule 62 (expression -> ELGT expression .)
    DO              reduce using rule 62 (expression -> ELGT expression .)
    GET             reduce using rule 62 (expression -> ELGT expression .)
    RESULT          reduce using rule 62 (expression -> ELGT expression .)
    LPAREN          reduce using rule 62 (expression -> ELGT expression .)
    $end            reduce using rule 62 (expression -> ELGT expression .)
    RPAREN          reduce using rule 62 (expression -> ELGT expression .)
    FALSE           reduce using rule 62 (expression -> ELGT expression .)
    NOT             reduce using rule 62 (expression -> ELGT expression .)
    DEC_INT         reduce using rule 62 (expression -> ELGT expression .)
    OCT_INT         reduce using rule 62 (expression -> ELGT expression .)
    HEX_INT         reduce using rule 62 (expression -> ELGT expression .)
    MXTRUE          reduce using rule 62 (expression -> ELGT expression .)
    MXFALSE         reduce using rule 62 (expression -> ELGT expression .)
    MXEQ            reduce using rule 62 (expression -> ELGT expression .)
    MXLT            reduce using rule 62 (expression -> ELGT expression .)
    MXGT            reduce using rule 62 (expression -> ELGT expression .)
    MXLTE           reduce using rule 62 (expression -> ELGT expression .)
    MXGTE           reduce using rule 62 (expression -> ELGT expression .)
    ELEQ            reduce using rule 62 (expression -> ELGT expression .)
    ELLT            reduce using rule 62 (expression -> ELGT expression .)
    ELGT            reduce using rule 62 (expression -> ELGT expression .)
    ELLTE           reduce using rule 62 (expression -> ELGT expression .)
    ELGTE           reduce using rule 62 (expression -> ELGT expression .)
    LOGITIZE        reduce using rule 62 (expression -> ELGT expression .)
    DIGITIZE        reduce using rule 62 (expression -> ELGT expression .)
    REDUCE          reduce using rule 62 (expression -> ELGT expression .)
    EXTEND          reduce using rule 62 (expression -> ELGT expression .)
    SIZE            reduce using rule 62 (expression -> ELGT expression .)
    RBRACKET        reduce using rule 62 (expression -> ELGT expression .)
    COMMA           reduce using rule 62 (expression -> ELGT expression .)
    STEP            reduce using rule 62 (expression -> ELGT expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72

  ! PLUS            [ reduce using rule 62 (expression -> ELGT expression .) ]
  ! MINUS           [ reduce using rule 62 (expression -> ELGT expression .) ]
  ! MULT            [ reduce using rule 62 (expression -> ELGT expression .) ]
  ! DIV             [ reduce using rule 62 (expression -> ELGT expression .) ]
  ! AND             [ reduce using rule 62 (expression -> ELGT expression .) ]


state 85

    (63) expression -> ELLTE expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    TRUE            reduce using rule 63 (expression -> ELLTE expression .)
    VAR             reduce using rule 63 (expression -> ELLTE expression .)
    IDENTIFIER      reduce using rule 63 (expression -> ELLTE expression .)
    MOVE            reduce using rule 63 (expression -> ELLTE expression .)
    ROTATE          reduce using rule 63 (expression -> ELLTE expression .)
    FOR             reduce using rule 63 (expression -> ELLTE expression .)
    SWITCH          reduce using rule 63 (expression -> ELLTE expression .)
    TASK            reduce using rule 63 (expression -> ELLTE expression .)
    DO              reduce using rule 63 (expression -> ELLTE expression .)
    GET             reduce using rule 63 (expression -> ELLTE expression .)
    RESULT          reduce using rule 63 (expression -> ELLTE expression .)
    LPAREN          reduce using rule 63 (expression -> ELLTE expression .)
    $end            reduce using rule 63 (expression -> ELLTE expression .)
    RPAREN          reduce using rule 63 (expression -> ELLTE expression .)
    FALSE           reduce using rule 63 (expression -> ELLTE expression .)
    NOT             reduce using rule 63 (expression -> ELLTE expression .)
    DEC_INT         reduce using rule 63 (expression -> ELLTE expression .)
    OCT_INT         reduce using rule 63 (expression -> ELLTE expression .)
    HEX_INT         reduce using rule 63 (expression -> ELLTE expression .)
    MXTRUE          reduce using rule 63 (expression -> ELLTE expression .)
    MXFALSE         reduce using rule 63 (expression -> ELLTE expression .)
    MXEQ            reduce using rule 63 (expression -> ELLTE expression .)
    MXLT            reduce using rule 63 (expression -> ELLTE expression .)
    MXGT            reduce using rule 63 (expression -> ELLTE expression .)
    MXLTE           reduce using rule 63 (expression -> ELLTE expression .)
    MXGTE           reduce using rule 63 (expression -> ELLTE expression .)
    ELEQ            reduce using rule 63 (expression -> ELLTE expression .)
    ELLT            reduce using rule 63 (expression -> ELLTE expression .)
    ELGT            reduce using rule 63 (expression -> ELLTE expression .)
    ELLTE           reduce using rule 63 (expression -> ELLTE expression .)
    ELGTE           reduce using rule 63 (expression -> ELLTE expression .)
    LOGITIZE        reduce using rule 63 (expression -> ELLTE expression .)
    DIGITIZE        reduce using rule 63 (expression -> ELLTE expression .)
    REDUCE          reduce using rule 63 (expression -> ELLTE expression .)
    EXTEND          reduce using rule 63 (expression -> ELLTE expression .)
    SIZE            reduce using rule 63 (expression -> ELLTE expression .)
    RBRACKET        reduce using rule 63 (expression -> ELLTE expression .)
    COMMA           reduce using rule 63 (expression -> ELLTE expression .)
    STEP            reduce using rule 63 (expression -> ELLTE expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72

  ! PLUS            [ reduce using rule 63 (expression -> ELLTE expression .) ]
  ! MINUS           [ reduce using rule 63 (expression -> ELLTE expression .) ]
  ! MULT            [ reduce using rule 63 (expression -> ELLTE expression .) ]
  ! DIV             [ reduce using rule 63 (expression -> ELLTE expression .) ]
  ! AND             [ reduce using rule 63 (expression -> ELLTE expression .) ]


state 86

    (64) expression -> ELGTE expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULT resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    TRUE            reduce using rule 64 (expression -> ELGTE expression .)
    VAR             reduce using rule 64 (expression -> ELGTE expression .)
    IDENTIFIER      reduce using rule 64 (expression -> ELGTE expression .)
    MOVE            reduce using rule 64 (expression -> ELGTE expression .)
    ROTATE          reduce using rule 64 (expression -> ELGTE expression .)
    FOR             reduce using rule 64 (expression -> ELGTE expression .)
    SWITCH          reduce using rule 64 (expression -> ELGTE expression .)
    TASK            reduce using rule 64 (expression -> ELGTE expression .)
    DO              reduce using rule 64 (expression -> ELGTE expression .)
    GET             reduce using rule 64 (expression -> ELGTE expression .)
    RESULT          reduce using rule 64 (expression -> ELGTE expression .)
    LPAREN          reduce using rule 64 (expression -> ELGTE expression .)
    $end            reduce using rule 64 (expression -> ELGTE expression .)
    RPAREN          reduce using rule 64 (expression -> ELGTE expression .)
    FALSE           reduce using rule 64 (expression -> ELGTE expression .)
    NOT             reduce using rule 64 (expression -> ELGTE expression .)
    DEC_INT         reduce using rule 64 (expression -> ELGTE expression .)
    OCT_INT         reduce using rule 64 (expression -> ELGTE expression .)
    HEX_INT         reduce using rule 64 (expression -> ELGTE expression .)
    MXTRUE          reduce using rule 64 (expression -> ELGTE expression .)
    MXFALSE         reduce using rule 64 (expression -> ELGTE expression .)
    MXEQ            reduce using rule 64 (expression -> ELGTE expression .)
    MXLT            reduce using rule 64 (expression -> ELGTE expression .)
    MXGT            reduce using rule 64 (expression -> ELGTE expression .)
    MXLTE           reduce using rule 64 (expression -> ELGTE expression .)
    MXGTE           reduce using rule 64 (expression -> ELGTE expression .)
    ELEQ            reduce using rule 64 (expression -> ELGTE expression .)
    ELLT            reduce using rule 64 (expression -> ELGTE expression .)
    ELGT            reduce using rule 64 (expression -> ELGTE expression .)
    ELLTE           reduce using rule 64 (expression -> ELGTE expression .)
    ELGTE           reduce using rule 64 (expression -> ELGTE expression .)
    LOGITIZE        reduce using rule 64 (expression -> ELGTE expression .)
    DIGITIZE        reduce using rule 64 (expression -> ELGTE expression .)
    REDUCE          reduce using rule 64 (expression -> ELGTE expression .)
    EXTEND          reduce using rule 64 (expression -> ELGTE expression .)
    SIZE            reduce using rule 64 (expression -> ELGTE expression .)
    RBRACKET        reduce using rule 64 (expression -> ELGTE expression .)
    COMMA           reduce using rule 64 (expression -> ELGTE expression .)
    STEP            reduce using rule 64 (expression -> ELGTE expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72

  ! PLUS            [ reduce using rule 64 (expression -> ELGTE expression .) ]
  ! MINUS           [ reduce using rule 64 (expression -> ELGTE expression .) ]
  ! MULT            [ reduce using rule 64 (expression -> ELGTE expression .) ]
  ! DIV             [ reduce using rule 64 (expression -> ELGTE expression .) ]
  ! AND             [ reduce using rule 64 (expression -> ELGTE expression .) ]


state 87

    (65) expression -> LOGITIZE IDENTIFIER .

    TRUE            reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    PLUS            reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    MINUS           reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    MULT            reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    DIV             reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    AND             reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    VAR             reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    IDENTIFIER      reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    MOVE            reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    ROTATE          reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    FOR             reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    SWITCH          reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    TASK            reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    DO              reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    GET             reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    RESULT          reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    LPAREN          reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    $end            reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    RPAREN          reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    FALSE           reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    NOT             reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    DEC_INT         reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    OCT_INT         reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    HEX_INT         reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    MXTRUE          reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    MXFALSE         reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    MXEQ            reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    MXLT            reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    MXGT            reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    MXLTE           reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    MXGTE           reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    ELEQ            reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    ELLT            reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    ELGT            reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    ELLTE           reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    ELGTE           reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    LOGITIZE        reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    DIGITIZE        reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    REDUCE          reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    EXTEND          reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    SIZE            reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    RBRACKET        reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    COMMA           reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)
    STEP            reduce using rule 65 (expression -> LOGITIZE IDENTIFIER .)


state 88

    (66) expression -> DIGITIZE IDENTIFIER .

    TRUE            reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    PLUS            reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    MINUS           reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    MULT            reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    DIV             reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    AND             reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    VAR             reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    IDENTIFIER      reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    MOVE            reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    ROTATE          reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    FOR             reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    SWITCH          reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    TASK            reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    DO              reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    GET             reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    RESULT          reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    LPAREN          reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    $end            reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    RPAREN          reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    FALSE           reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    NOT             reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    DEC_INT         reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    OCT_INT         reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    HEX_INT         reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    MXTRUE          reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    MXFALSE         reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    MXEQ            reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    MXLT            reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    MXGT            reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    MXLTE           reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    MXGTE           reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    ELEQ            reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    ELLT            reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    ELGT            reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    ELLTE           reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    ELGTE           reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    LOGITIZE        reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    DIGITIZE        reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    REDUCE          reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    EXTEND          reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    SIZE            reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    RBRACKET        reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    COMMA           reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)
    STEP            reduce using rule 66 (expression -> DIGITIZE IDENTIFIER .)


state 89

    (67) expression -> REDUCE IDENTIFIER . dimensions_opt
    (17) dimensions_opt -> .
    (18) dimensions_opt -> . LBRACKET dim_list RBRACKET

    TRUE            reduce using rule 17 (dimensions_opt -> .)
    PLUS            reduce using rule 17 (dimensions_opt -> .)
    MINUS           reduce using rule 17 (dimensions_opt -> .)
    MULT            reduce using rule 17 (dimensions_opt -> .)
    DIV             reduce using rule 17 (dimensions_opt -> .)
    AND             reduce using rule 17 (dimensions_opt -> .)
    VAR             reduce using rule 17 (dimensions_opt -> .)
    IDENTIFIER      reduce using rule 17 (dimensions_opt -> .)
    MOVE            reduce using rule 17 (dimensions_opt -> .)
    ROTATE          reduce using rule 17 (dimensions_opt -> .)
    FOR             reduce using rule 17 (dimensions_opt -> .)
    SWITCH          reduce using rule 17 (dimensions_opt -> .)
    TASK            reduce using rule 17 (dimensions_opt -> .)
    DO              reduce using rule 17 (dimensions_opt -> .)
    GET             reduce using rule 17 (dimensions_opt -> .)
    RESULT          reduce using rule 17 (dimensions_opt -> .)
    LPAREN          reduce using rule 17 (dimensions_opt -> .)
    $end            reduce using rule 17 (dimensions_opt -> .)
    RPAREN          reduce using rule 17 (dimensions_opt -> .)
    FALSE           reduce using rule 17 (dimensions_opt -> .)
    NOT             reduce using rule 17 (dimensions_opt -> .)
    DEC_INT         reduce using rule 17 (dimensions_opt -> .)
    OCT_INT         reduce using rule 17 (dimensions_opt -> .)
    HEX_INT         reduce using rule 17 (dimensions_opt -> .)
    MXTRUE          reduce using rule 17 (dimensions_opt -> .)
    MXFALSE         reduce using rule 17 (dimensions_opt -> .)
    MXEQ            reduce using rule 17 (dimensions_opt -> .)
    MXLT            reduce using rule 17 (dimensions_opt -> .)
    MXGT            reduce using rule 17 (dimensions_opt -> .)
    MXLTE           reduce using rule 17 (dimensions_opt -> .)
    MXGTE           reduce using rule 17 (dimensions_opt -> .)
    ELEQ            reduce using rule 17 (dimensions_opt -> .)
    ELLT            reduce using rule 17 (dimensions_opt -> .)
    ELGT            reduce using rule 17 (dimensions_opt -> .)
    ELLTE           reduce using rule 17 (dimensions_opt -> .)
    ELGTE           reduce using rule 17 (dimensions_opt -> .)
    LOGITIZE        reduce using rule 17 (dimensions_opt -> .)
    DIGITIZE        reduce using rule 17 (dimensions_opt -> .)
    REDUCE          reduce using rule 17 (dimensions_opt -> .)
    EXTEND          reduce using rule 17 (dimensions_opt -> .)
    SIZE            reduce using rule 17 (dimensions_opt -> .)
    RBRACKET        reduce using rule 17 (dimensions_opt -> .)
    COMMA           reduce using rule 17 (dimensions_opt -> .)
    STEP            reduce using rule 17 (dimensions_opt -> .)
    LBRACKET        shift and go to state 64

    dimensions_opt                 shift and go to state 111

state 90

    (68) expression -> EXTEND IDENTIFIER . dimensions_opt
    (17) dimensions_opt -> .
    (18) dimensions_opt -> . LBRACKET dim_list RBRACKET

    TRUE            reduce using rule 17 (dimensions_opt -> .)
    PLUS            reduce using rule 17 (dimensions_opt -> .)
    MINUS           reduce using rule 17 (dimensions_opt -> .)
    MULT            reduce using rule 17 (dimensions_opt -> .)
    DIV             reduce using rule 17 (dimensions_opt -> .)
    AND             reduce using rule 17 (dimensions_opt -> .)
    VAR             reduce using rule 17 (dimensions_opt -> .)
    IDENTIFIER      reduce using rule 17 (dimensions_opt -> .)
    MOVE            reduce using rule 17 (dimensions_opt -> .)
    ROTATE          reduce using rule 17 (dimensions_opt -> .)
    FOR             reduce using rule 17 (dimensions_opt -> .)
    SWITCH          reduce using rule 17 (dimensions_opt -> .)
    TASK            reduce using rule 17 (dimensions_opt -> .)
    DO              reduce using rule 17 (dimensions_opt -> .)
    GET             reduce using rule 17 (dimensions_opt -> .)
    RESULT          reduce using rule 17 (dimensions_opt -> .)
    LPAREN          reduce using rule 17 (dimensions_opt -> .)
    $end            reduce using rule 17 (dimensions_opt -> .)
    RPAREN          reduce using rule 17 (dimensions_opt -> .)
    FALSE           reduce using rule 17 (dimensions_opt -> .)
    NOT             reduce using rule 17 (dimensions_opt -> .)
    DEC_INT         reduce using rule 17 (dimensions_opt -> .)
    OCT_INT         reduce using rule 17 (dimensions_opt -> .)
    HEX_INT         reduce using rule 17 (dimensions_opt -> .)
    MXTRUE          reduce using rule 17 (dimensions_opt -> .)
    MXFALSE         reduce using rule 17 (dimensions_opt -> .)
    MXEQ            reduce using rule 17 (dimensions_opt -> .)
    MXLT            reduce using rule 17 (dimensions_opt -> .)
    MXGT            reduce using rule 17 (dimensions_opt -> .)
    MXLTE           reduce using rule 17 (dimensions_opt -> .)
    MXGTE           reduce using rule 17 (dimensions_opt -> .)
    ELEQ            reduce using rule 17 (dimensions_opt -> .)
    ELLT            reduce using rule 17 (dimensions_opt -> .)
    ELGT            reduce using rule 17 (dimensions_opt -> .)
    ELLTE           reduce using rule 17 (dimensions_opt -> .)
    ELGTE           reduce using rule 17 (dimensions_opt -> .)
    LOGITIZE        reduce using rule 17 (dimensions_opt -> .)
    DIGITIZE        reduce using rule 17 (dimensions_opt -> .)
    REDUCE          reduce using rule 17 (dimensions_opt -> .)
    EXTEND          reduce using rule 17 (dimensions_opt -> .)
    SIZE            reduce using rule 17 (dimensions_opt -> .)
    RBRACKET        reduce using rule 17 (dimensions_opt -> .)
    COMMA           reduce using rule 17 (dimensions_opt -> .)
    STEP            reduce using rule 17 (dimensions_opt -> .)
    LBRACKET        shift and go to state 64

    dimensions_opt                 shift and go to state 112

state 91

    (69) expression -> SIZE LPAREN . IDENTIFIER RPAREN

    IDENTIFIER      shift and go to state 113


state 92

    (70) expression -> GET ENVIRONMENT .

    TRUE            reduce using rule 70 (expression -> GET ENVIRONMENT .)
    PLUS            reduce using rule 70 (expression -> GET ENVIRONMENT .)
    MINUS           reduce using rule 70 (expression -> GET ENVIRONMENT .)
    MULT            reduce using rule 70 (expression -> GET ENVIRONMENT .)
    DIV             reduce using rule 70 (expression -> GET ENVIRONMENT .)
    AND             reduce using rule 70 (expression -> GET ENVIRONMENT .)
    VAR             reduce using rule 70 (expression -> GET ENVIRONMENT .)
    IDENTIFIER      reduce using rule 70 (expression -> GET ENVIRONMENT .)
    MOVE            reduce using rule 70 (expression -> GET ENVIRONMENT .)
    ROTATE          reduce using rule 70 (expression -> GET ENVIRONMENT .)
    FOR             reduce using rule 70 (expression -> GET ENVIRONMENT .)
    SWITCH          reduce using rule 70 (expression -> GET ENVIRONMENT .)
    TASK            reduce using rule 70 (expression -> GET ENVIRONMENT .)
    DO              reduce using rule 70 (expression -> GET ENVIRONMENT .)
    GET             reduce using rule 70 (expression -> GET ENVIRONMENT .)
    RESULT          reduce using rule 70 (expression -> GET ENVIRONMENT .)
    LPAREN          reduce using rule 70 (expression -> GET ENVIRONMENT .)
    $end            reduce using rule 70 (expression -> GET ENVIRONMENT .)
    RPAREN          reduce using rule 70 (expression -> GET ENVIRONMENT .)
    FALSE           reduce using rule 70 (expression -> GET ENVIRONMENT .)
    NOT             reduce using rule 70 (expression -> GET ENVIRONMENT .)
    DEC_INT         reduce using rule 70 (expression -> GET ENVIRONMENT .)
    OCT_INT         reduce using rule 70 (expression -> GET ENVIRONMENT .)
    HEX_INT         reduce using rule 70 (expression -> GET ENVIRONMENT .)
    MXTRUE          reduce using rule 70 (expression -> GET ENVIRONMENT .)
    MXFALSE         reduce using rule 70 (expression -> GET ENVIRONMENT .)
    MXEQ            reduce using rule 70 (expression -> GET ENVIRONMENT .)
    MXLT            reduce using rule 70 (expression -> GET ENVIRONMENT .)
    MXGT            reduce using rule 70 (expression -> GET ENVIRONMENT .)
    MXLTE           reduce using rule 70 (expression -> GET ENVIRONMENT .)
    MXGTE           reduce using rule 70 (expression -> GET ENVIRONMENT .)
    ELEQ            reduce using rule 70 (expression -> GET ENVIRONMENT .)
    ELLT            reduce using rule 70 (expression -> GET ENVIRONMENT .)
    ELGT            reduce using rule 70 (expression -> GET ENVIRONMENT .)
    ELLTE           reduce using rule 70 (expression -> GET ENVIRONMENT .)
    ELGTE           reduce using rule 70 (expression -> GET ENVIRONMENT .)
    LOGITIZE        reduce using rule 70 (expression -> GET ENVIRONMENT .)
    DIGITIZE        reduce using rule 70 (expression -> GET ENVIRONMENT .)
    REDUCE          reduce using rule 70 (expression -> GET ENVIRONMENT .)
    EXTEND          reduce using rule 70 (expression -> GET ENVIRONMENT .)
    SIZE            reduce using rule 70 (expression -> GET ENVIRONMENT .)
    RBRACKET        reduce using rule 70 (expression -> GET ENVIRONMENT .)
    COMMA           reduce using rule 70 (expression -> GET ENVIRONMENT .)
    STEP            reduce using rule 70 (expression -> GET ENVIRONMENT .)


state 93

    (31) parameter_list -> IDENTIFIER .

    IDENTIFIER      reduce using rule 31 (parameter_list -> IDENTIFIER .)
    LPAREN          reduce using rule 31 (parameter_list -> IDENTIFIER .)
    VAR             reduce using rule 31 (parameter_list -> IDENTIFIER .)
    MOVE            reduce using rule 31 (parameter_list -> IDENTIFIER .)
    ROTATE          reduce using rule 31 (parameter_list -> IDENTIFIER .)
    FOR             reduce using rule 31 (parameter_list -> IDENTIFIER .)
    SWITCH          reduce using rule 31 (parameter_list -> IDENTIFIER .)
    TASK            reduce using rule 31 (parameter_list -> IDENTIFIER .)
    DO              reduce using rule 31 (parameter_list -> IDENTIFIER .)
    GET             reduce using rule 31 (parameter_list -> IDENTIFIER .)
    RESULT          reduce using rule 31 (parameter_list -> IDENTIFIER .)
    $end            reduce using rule 31 (parameter_list -> IDENTIFIER .)
    RPAREN          reduce using rule 31 (parameter_list -> IDENTIFIER .)
    FALSE           reduce using rule 31 (parameter_list -> IDENTIFIER .)


state 94

    (28) function_definition -> TASK IDENTIFIER parameter_list . block
    (30) parameter_list -> parameter_list . IDENTIFIER
    (38) block -> . statements
    (39) block -> . group_statements
    (2) statements -> .
    (3) statements -> . statements statement
    (15) group_statements -> . LPAREN statements RPAREN

  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    IDENTIFIER      shift and go to state 114
    VAR             reduce using rule 2 (statements -> .)
    MOVE            reduce using rule 2 (statements -> .)
    ROTATE          reduce using rule 2 (statements -> .)
    FOR             reduce using rule 2 (statements -> .)
    SWITCH          reduce using rule 2 (statements -> .)
    TASK            reduce using rule 2 (statements -> .)
    DO              reduce using rule 2 (statements -> .)
    GET             reduce using rule 2 (statements -> .)
    RESULT          reduce using rule 2 (statements -> .)
    FALSE           reduce using rule 2 (statements -> .)
    $end            reduce using rule 2 (statements -> .)
    RPAREN          reduce using rule 2 (statements -> .)
    LPAREN          shift and go to state 25

  ! IDENTIFIER      [ reduce using rule 2 (statements -> .) ]
  ! LPAREN          [ reduce using rule 2 (statements -> .) ]

    block                          shift and go to state 115
    statements                     shift and go to state 103
    group_statements               shift and go to state 104

state 95

    (32) function_call -> DO IDENTIFIER argument_list .
    (34) argument_list -> argument_list . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for GET resolved as shift
    VAR             reduce using rule 32 (function_call -> DO IDENTIFIER argument_list .)
    MOVE            reduce using rule 32 (function_call -> DO IDENTIFIER argument_list .)
    ROTATE          reduce using rule 32 (function_call -> DO IDENTIFIER argument_list .)
    FOR             reduce using rule 32 (function_call -> DO IDENTIFIER argument_list .)
    SWITCH          reduce using rule 32 (function_call -> DO IDENTIFIER argument_list .)
    TASK            reduce using rule 32 (function_call -> DO IDENTIFIER argument_list .)
    DO              reduce using rule 32 (function_call -> DO IDENTIFIER argument_list .)
    RESULT          reduce using rule 32 (function_call -> DO IDENTIFIER argument_list .)
    $end            reduce using rule 32 (function_call -> DO IDENTIFIER argument_list .)
    RPAREN          reduce using rule 32 (function_call -> DO IDENTIFIER argument_list .)
    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

  ! IDENTIFIER      [ reduce using rule 32 (function_call -> DO IDENTIFIER argument_list .) ]
  ! GET             [ reduce using rule 32 (function_call -> DO IDENTIFIER argument_list .) ]
  ! LPAREN          [ reduce using rule 32 (function_call -> DO IDENTIFIER argument_list .) ]
  ! FALSE           [ reduce using rule 32 (function_call -> DO IDENTIFIER argument_list .) ]

    expression                     shift and go to state 116

state 96

    (35) argument_list -> expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    NOT             reduce using rule 35 (argument_list -> expression .)
    LPAREN          reduce using rule 35 (argument_list -> expression .)
    DEC_INT         reduce using rule 35 (argument_list -> expression .)
    OCT_INT         reduce using rule 35 (argument_list -> expression .)
    HEX_INT         reduce using rule 35 (argument_list -> expression .)
    TRUE            reduce using rule 35 (argument_list -> expression .)
    FALSE           reduce using rule 35 (argument_list -> expression .)
    IDENTIFIER      reduce using rule 35 (argument_list -> expression .)
    MXTRUE          reduce using rule 35 (argument_list -> expression .)
    MXFALSE         reduce using rule 35 (argument_list -> expression .)
    MXEQ            reduce using rule 35 (argument_list -> expression .)
    MXLT            reduce using rule 35 (argument_list -> expression .)
    MXGT            reduce using rule 35 (argument_list -> expression .)
    MXLTE           reduce using rule 35 (argument_list -> expression .)
    MXGTE           reduce using rule 35 (argument_list -> expression .)
    ELEQ            reduce using rule 35 (argument_list -> expression .)
    ELLT            reduce using rule 35 (argument_list -> expression .)
    ELGT            reduce using rule 35 (argument_list -> expression .)
    ELLTE           reduce using rule 35 (argument_list -> expression .)
    ELGTE           reduce using rule 35 (argument_list -> expression .)
    LOGITIZE        reduce using rule 35 (argument_list -> expression .)
    DIGITIZE        reduce using rule 35 (argument_list -> expression .)
    REDUCE          reduce using rule 35 (argument_list -> expression .)
    EXTEND          reduce using rule 35 (argument_list -> expression .)
    SIZE            reduce using rule 35 (argument_list -> expression .)
    GET             reduce using rule 35 (argument_list -> expression .)
    VAR             reduce using rule 35 (argument_list -> expression .)
    MOVE            reduce using rule 35 (argument_list -> expression .)
    ROTATE          reduce using rule 35 (argument_list -> expression .)
    FOR             reduce using rule 35 (argument_list -> expression .)
    SWITCH          reduce using rule 35 (argument_list -> expression .)
    TASK            reduce using rule 35 (argument_list -> expression .)
    DO              reduce using rule 35 (argument_list -> expression .)
    RESULT          reduce using rule 35 (argument_list -> expression .)
    $end            reduce using rule 35 (argument_list -> expression .)
    RPAREN          reduce using rule 35 (argument_list -> expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72


state 97

    (15) group_statements -> LPAREN statements RPAREN .

    VAR             reduce using rule 15 (group_statements -> LPAREN statements RPAREN .)
    IDENTIFIER      reduce using rule 15 (group_statements -> LPAREN statements RPAREN .)
    MOVE            reduce using rule 15 (group_statements -> LPAREN statements RPAREN .)
    ROTATE          reduce using rule 15 (group_statements -> LPAREN statements RPAREN .)
    FOR             reduce using rule 15 (group_statements -> LPAREN statements RPAREN .)
    SWITCH          reduce using rule 15 (group_statements -> LPAREN statements RPAREN .)
    TASK            reduce using rule 15 (group_statements -> LPAREN statements RPAREN .)
    DO              reduce using rule 15 (group_statements -> LPAREN statements RPAREN .)
    GET             reduce using rule 15 (group_statements -> LPAREN statements RPAREN .)
    RESULT          reduce using rule 15 (group_statements -> LPAREN statements RPAREN .)
    LPAREN          reduce using rule 15 (group_statements -> LPAREN statements RPAREN .)
    $end            reduce using rule 15 (group_statements -> LPAREN statements RPAREN .)
    RPAREN          reduce using rule 15 (group_statements -> LPAREN statements RPAREN .)
    FALSE           reduce using rule 15 (group_statements -> LPAREN statements RPAREN .)


state 98

    (16) var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 117

state 99

    (18) dimensions_opt -> LBRACKET dim_list . RBRACKET
    (19) dim_list -> dim_list . COMMA expression

    RBRACKET        shift and go to state 118
    COMMA           shift and go to state 119


state 100

    (20) dim_list -> expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    RBRACKET        reduce using rule 20 (dim_list -> expression .)
    COMMA           reduce using rule 20 (dim_list -> expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72


state 101

    (25) for_loop -> FOR IDENTIFIER BOUNDARY expression . STEP expression block
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    STEP            shift and go to state 120
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72


state 102

    (26) switch_statement -> SWITCH expression TRUE block . FALSE block
    (27) switch_statement -> SWITCH expression TRUE block .

  ! shift/reduce conflict for FALSE resolved as shift
    FALSE           shift and go to state 121
    VAR             reduce using rule 27 (switch_statement -> SWITCH expression TRUE block .)
    IDENTIFIER      reduce using rule 27 (switch_statement -> SWITCH expression TRUE block .)
    MOVE            reduce using rule 27 (switch_statement -> SWITCH expression TRUE block .)
    ROTATE          reduce using rule 27 (switch_statement -> SWITCH expression TRUE block .)
    FOR             reduce using rule 27 (switch_statement -> SWITCH expression TRUE block .)
    SWITCH          reduce using rule 27 (switch_statement -> SWITCH expression TRUE block .)
    TASK            reduce using rule 27 (switch_statement -> SWITCH expression TRUE block .)
    DO              reduce using rule 27 (switch_statement -> SWITCH expression TRUE block .)
    GET             reduce using rule 27 (switch_statement -> SWITCH expression TRUE block .)
    RESULT          reduce using rule 27 (switch_statement -> SWITCH expression TRUE block .)
    LPAREN          reduce using rule 27 (switch_statement -> SWITCH expression TRUE block .)
    $end            reduce using rule 27 (switch_statement -> SWITCH expression TRUE block .)
    RPAREN          reduce using rule 27 (switch_statement -> SWITCH expression TRUE block .)

  ! FALSE           [ reduce using rule 27 (switch_statement -> SWITCH expression TRUE block .) ]


state 103

    (38) block -> statements .
    (3) statements -> statements . statement
    (4) statement -> . var_declaration
    (5) statement -> . assignment
    (6) statement -> . move_command
    (7) statement -> . rotate_command
    (8) statement -> . for_loop
    (9) statement -> . switch_statement
    (10) statement -> . function_definition
    (11) statement -> . function_call
    (12) statement -> . get_result
    (13) statement -> . result_statement
    (14) statement -> . group_statements
    (16) var_declaration -> . VAR IDENTIFIER dimensions_opt ASSIGN expression
    (21) assignment -> . IDENTIFIER ASSIGN expression
    (22) move_command -> . MOVE
    (23) rotate_command -> . ROTATE LEFT
    (24) rotate_command -> . ROTATE RIGHT
    (25) for_loop -> . FOR IDENTIFIER BOUNDARY expression STEP expression block
    (26) switch_statement -> . SWITCH expression TRUE block FALSE block
    (27) switch_statement -> . SWITCH expression TRUE block
    (28) function_definition -> . TASK IDENTIFIER parameter_list block
    (32) function_call -> . DO IDENTIFIER argument_list
    (36) get_result -> . GET IDENTIFIER
    (37) result_statement -> . RESULT IDENTIFIER
    (15) group_statements -> . LPAREN statements RPAREN

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for MOVE resolved as shift
  ! shift/reduce conflict for ROTATE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for TASK resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for GET resolved as shift
  ! shift/reduce conflict for RESULT resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    FALSE           reduce using rule 38 (block -> statements .)
    $end            reduce using rule 38 (block -> statements .)
    RPAREN          reduce using rule 38 (block -> statements .)
    VAR             shift and go to state 15
    IDENTIFIER      shift and go to state 16
    MOVE            shift and go to state 17
    ROTATE          shift and go to state 18
    FOR             shift and go to state 19
    SWITCH          shift and go to state 20
    TASK            shift and go to state 21
    DO              shift and go to state 22
    GET             shift and go to state 23
    RESULT          shift and go to state 24
    LPAREN          shift and go to state 25

  ! VAR             [ reduce using rule 38 (block -> statements .) ]
  ! IDENTIFIER      [ reduce using rule 38 (block -> statements .) ]
  ! MOVE            [ reduce using rule 38 (block -> statements .) ]
  ! ROTATE          [ reduce using rule 38 (block -> statements .) ]
  ! FOR             [ reduce using rule 38 (block -> statements .) ]
  ! SWITCH          [ reduce using rule 38 (block -> statements .) ]
  ! TASK            [ reduce using rule 38 (block -> statements .) ]
  ! DO              [ reduce using rule 38 (block -> statements .) ]
  ! GET             [ reduce using rule 38 (block -> statements .) ]
  ! RESULT          [ reduce using rule 38 (block -> statements .) ]
  ! LPAREN          [ reduce using rule 38 (block -> statements .) ]

    statement                      shift and go to state 3
    var_declaration                shift and go to state 4
    assignment                     shift and go to state 5
    move_command                   shift and go to state 6
    rotate_command                 shift and go to state 7
    for_loop                       shift and go to state 8
    switch_statement               shift and go to state 9
    function_definition            shift and go to state 10
    function_call                  shift and go to state 11
    get_result                     shift and go to state 12
    result_statement               shift and go to state 13
    group_statements               shift and go to state 14

state 104

    (39) block -> group_statements .

    VAR             reduce using rule 39 (block -> group_statements .)
    IDENTIFIER      reduce using rule 39 (block -> group_statements .)
    MOVE            reduce using rule 39 (block -> group_statements .)
    ROTATE          reduce using rule 39 (block -> group_statements .)
    FOR             reduce using rule 39 (block -> group_statements .)
    SWITCH          reduce using rule 39 (block -> group_statements .)
    TASK            reduce using rule 39 (block -> group_statements .)
    DO              reduce using rule 39 (block -> group_statements .)
    GET             reduce using rule 39 (block -> group_statements .)
    RESULT          reduce using rule 39 (block -> group_statements .)
    LPAREN          reduce using rule 39 (block -> group_statements .)
    FALSE           reduce using rule 39 (block -> group_statements .)
    $end            reduce using rule 39 (block -> group_statements .)
    RPAREN          reduce using rule 39 (block -> group_statements .)


state 105

    (40) expression -> expression PLUS expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    TRUE            reduce using rule 40 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 40 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 40 (expression -> expression PLUS expression .)
    AND             reduce using rule 40 (expression -> expression PLUS expression .)
    VAR             reduce using rule 40 (expression -> expression PLUS expression .)
    IDENTIFIER      reduce using rule 40 (expression -> expression PLUS expression .)
    MOVE            reduce using rule 40 (expression -> expression PLUS expression .)
    ROTATE          reduce using rule 40 (expression -> expression PLUS expression .)
    FOR             reduce using rule 40 (expression -> expression PLUS expression .)
    SWITCH          reduce using rule 40 (expression -> expression PLUS expression .)
    TASK            reduce using rule 40 (expression -> expression PLUS expression .)
    DO              reduce using rule 40 (expression -> expression PLUS expression .)
    GET             reduce using rule 40 (expression -> expression PLUS expression .)
    RESULT          reduce using rule 40 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 40 (expression -> expression PLUS expression .)
    $end            reduce using rule 40 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 40 (expression -> expression PLUS expression .)
    FALSE           reduce using rule 40 (expression -> expression PLUS expression .)
    NOT             reduce using rule 40 (expression -> expression PLUS expression .)
    DEC_INT         reduce using rule 40 (expression -> expression PLUS expression .)
    OCT_INT         reduce using rule 40 (expression -> expression PLUS expression .)
    HEX_INT         reduce using rule 40 (expression -> expression PLUS expression .)
    MXTRUE          reduce using rule 40 (expression -> expression PLUS expression .)
    MXFALSE         reduce using rule 40 (expression -> expression PLUS expression .)
    MXEQ            reduce using rule 40 (expression -> expression PLUS expression .)
    MXLT            reduce using rule 40 (expression -> expression PLUS expression .)
    MXGT            reduce using rule 40 (expression -> expression PLUS expression .)
    MXLTE           reduce using rule 40 (expression -> expression PLUS expression .)
    MXGTE           reduce using rule 40 (expression -> expression PLUS expression .)
    ELEQ            reduce using rule 40 (expression -> expression PLUS expression .)
    ELLT            reduce using rule 40 (expression -> expression PLUS expression .)
    ELGT            reduce using rule 40 (expression -> expression PLUS expression .)
    ELLTE           reduce using rule 40 (expression -> expression PLUS expression .)
    ELGTE           reduce using rule 40 (expression -> expression PLUS expression .)
    LOGITIZE        reduce using rule 40 (expression -> expression PLUS expression .)
    DIGITIZE        reduce using rule 40 (expression -> expression PLUS expression .)
    REDUCE          reduce using rule 40 (expression -> expression PLUS expression .)
    EXTEND          reduce using rule 40 (expression -> expression PLUS expression .)
    SIZE            reduce using rule 40 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 40 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 40 (expression -> expression PLUS expression .)
    STEP            reduce using rule 40 (expression -> expression PLUS expression .)
    MULT            shift and go to state 70
    DIV             shift and go to state 71

  ! MULT            [ reduce using rule 40 (expression -> expression PLUS expression .) ]
  ! DIV             [ reduce using rule 40 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 68 ]
  ! MINUS           [ shift and go to state 69 ]
  ! AND             [ shift and go to state 72 ]


state 106

    (41) expression -> expression MINUS expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    TRUE            reduce using rule 41 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 41 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 41 (expression -> expression MINUS expression .)
    AND             reduce using rule 41 (expression -> expression MINUS expression .)
    VAR             reduce using rule 41 (expression -> expression MINUS expression .)
    IDENTIFIER      reduce using rule 41 (expression -> expression MINUS expression .)
    MOVE            reduce using rule 41 (expression -> expression MINUS expression .)
    ROTATE          reduce using rule 41 (expression -> expression MINUS expression .)
    FOR             reduce using rule 41 (expression -> expression MINUS expression .)
    SWITCH          reduce using rule 41 (expression -> expression MINUS expression .)
    TASK            reduce using rule 41 (expression -> expression MINUS expression .)
    DO              reduce using rule 41 (expression -> expression MINUS expression .)
    GET             reduce using rule 41 (expression -> expression MINUS expression .)
    RESULT          reduce using rule 41 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 41 (expression -> expression MINUS expression .)
    $end            reduce using rule 41 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 41 (expression -> expression MINUS expression .)
    FALSE           reduce using rule 41 (expression -> expression MINUS expression .)
    NOT             reduce using rule 41 (expression -> expression MINUS expression .)
    DEC_INT         reduce using rule 41 (expression -> expression MINUS expression .)
    OCT_INT         reduce using rule 41 (expression -> expression MINUS expression .)
    HEX_INT         reduce using rule 41 (expression -> expression MINUS expression .)
    MXTRUE          reduce using rule 41 (expression -> expression MINUS expression .)
    MXFALSE         reduce using rule 41 (expression -> expression MINUS expression .)
    MXEQ            reduce using rule 41 (expression -> expression MINUS expression .)
    MXLT            reduce using rule 41 (expression -> expression MINUS expression .)
    MXGT            reduce using rule 41 (expression -> expression MINUS expression .)
    MXLTE           reduce using rule 41 (expression -> expression MINUS expression .)
    MXGTE           reduce using rule 41 (expression -> expression MINUS expression .)
    ELEQ            reduce using rule 41 (expression -> expression MINUS expression .)
    ELLT            reduce using rule 41 (expression -> expression MINUS expression .)
    ELGT            reduce using rule 41 (expression -> expression MINUS expression .)
    ELLTE           reduce using rule 41 (expression -> expression MINUS expression .)
    ELGTE           reduce using rule 41 (expression -> expression MINUS expression .)
    LOGITIZE        reduce using rule 41 (expression -> expression MINUS expression .)
    DIGITIZE        reduce using rule 41 (expression -> expression MINUS expression .)
    REDUCE          reduce using rule 41 (expression -> expression MINUS expression .)
    EXTEND          reduce using rule 41 (expression -> expression MINUS expression .)
    SIZE            reduce using rule 41 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 41 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 41 (expression -> expression MINUS expression .)
    STEP            reduce using rule 41 (expression -> expression MINUS expression .)
    MULT            shift and go to state 70
    DIV             shift and go to state 71

  ! MULT            [ reduce using rule 41 (expression -> expression MINUS expression .) ]
  ! DIV             [ reduce using rule 41 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 68 ]
  ! MINUS           [ shift and go to state 69 ]
  ! AND             [ shift and go to state 72 ]


state 107

    (42) expression -> expression MULT expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    TRUE            reduce using rule 42 (expression -> expression MULT expression .)
    PLUS            reduce using rule 42 (expression -> expression MULT expression .)
    MINUS           reduce using rule 42 (expression -> expression MULT expression .)
    MULT            reduce using rule 42 (expression -> expression MULT expression .)
    DIV             reduce using rule 42 (expression -> expression MULT expression .)
    AND             reduce using rule 42 (expression -> expression MULT expression .)
    VAR             reduce using rule 42 (expression -> expression MULT expression .)
    IDENTIFIER      reduce using rule 42 (expression -> expression MULT expression .)
    MOVE            reduce using rule 42 (expression -> expression MULT expression .)
    ROTATE          reduce using rule 42 (expression -> expression MULT expression .)
    FOR             reduce using rule 42 (expression -> expression MULT expression .)
    SWITCH          reduce using rule 42 (expression -> expression MULT expression .)
    TASK            reduce using rule 42 (expression -> expression MULT expression .)
    DO              reduce using rule 42 (expression -> expression MULT expression .)
    GET             reduce using rule 42 (expression -> expression MULT expression .)
    RESULT          reduce using rule 42 (expression -> expression MULT expression .)
    LPAREN          reduce using rule 42 (expression -> expression MULT expression .)
    $end            reduce using rule 42 (expression -> expression MULT expression .)
    RPAREN          reduce using rule 42 (expression -> expression MULT expression .)
    FALSE           reduce using rule 42 (expression -> expression MULT expression .)
    NOT             reduce using rule 42 (expression -> expression MULT expression .)
    DEC_INT         reduce using rule 42 (expression -> expression MULT expression .)
    OCT_INT         reduce using rule 42 (expression -> expression MULT expression .)
    HEX_INT         reduce using rule 42 (expression -> expression MULT expression .)
    MXTRUE          reduce using rule 42 (expression -> expression MULT expression .)
    MXFALSE         reduce using rule 42 (expression -> expression MULT expression .)
    MXEQ            reduce using rule 42 (expression -> expression MULT expression .)
    MXLT            reduce using rule 42 (expression -> expression MULT expression .)
    MXGT            reduce using rule 42 (expression -> expression MULT expression .)
    MXLTE           reduce using rule 42 (expression -> expression MULT expression .)
    MXGTE           reduce using rule 42 (expression -> expression MULT expression .)
    ELEQ            reduce using rule 42 (expression -> expression MULT expression .)
    ELLT            reduce using rule 42 (expression -> expression MULT expression .)
    ELGT            reduce using rule 42 (expression -> expression MULT expression .)
    ELLTE           reduce using rule 42 (expression -> expression MULT expression .)
    ELGTE           reduce using rule 42 (expression -> expression MULT expression .)
    LOGITIZE        reduce using rule 42 (expression -> expression MULT expression .)
    DIGITIZE        reduce using rule 42 (expression -> expression MULT expression .)
    REDUCE          reduce using rule 42 (expression -> expression MULT expression .)
    EXTEND          reduce using rule 42 (expression -> expression MULT expression .)
    SIZE            reduce using rule 42 (expression -> expression MULT expression .)
    RBRACKET        reduce using rule 42 (expression -> expression MULT expression .)
    COMMA           reduce using rule 42 (expression -> expression MULT expression .)
    STEP            reduce using rule 42 (expression -> expression MULT expression .)

  ! PLUS            [ shift and go to state 68 ]
  ! MINUS           [ shift and go to state 69 ]
  ! MULT            [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 108

    (43) expression -> expression DIV expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    TRUE            reduce using rule 43 (expression -> expression DIV expression .)
    PLUS            reduce using rule 43 (expression -> expression DIV expression .)
    MINUS           reduce using rule 43 (expression -> expression DIV expression .)
    MULT            reduce using rule 43 (expression -> expression DIV expression .)
    DIV             reduce using rule 43 (expression -> expression DIV expression .)
    AND             reduce using rule 43 (expression -> expression DIV expression .)
    VAR             reduce using rule 43 (expression -> expression DIV expression .)
    IDENTIFIER      reduce using rule 43 (expression -> expression DIV expression .)
    MOVE            reduce using rule 43 (expression -> expression DIV expression .)
    ROTATE          reduce using rule 43 (expression -> expression DIV expression .)
    FOR             reduce using rule 43 (expression -> expression DIV expression .)
    SWITCH          reduce using rule 43 (expression -> expression DIV expression .)
    TASK            reduce using rule 43 (expression -> expression DIV expression .)
    DO              reduce using rule 43 (expression -> expression DIV expression .)
    GET             reduce using rule 43 (expression -> expression DIV expression .)
    RESULT          reduce using rule 43 (expression -> expression DIV expression .)
    LPAREN          reduce using rule 43 (expression -> expression DIV expression .)
    $end            reduce using rule 43 (expression -> expression DIV expression .)
    RPAREN          reduce using rule 43 (expression -> expression DIV expression .)
    FALSE           reduce using rule 43 (expression -> expression DIV expression .)
    NOT             reduce using rule 43 (expression -> expression DIV expression .)
    DEC_INT         reduce using rule 43 (expression -> expression DIV expression .)
    OCT_INT         reduce using rule 43 (expression -> expression DIV expression .)
    HEX_INT         reduce using rule 43 (expression -> expression DIV expression .)
    MXTRUE          reduce using rule 43 (expression -> expression DIV expression .)
    MXFALSE         reduce using rule 43 (expression -> expression DIV expression .)
    MXEQ            reduce using rule 43 (expression -> expression DIV expression .)
    MXLT            reduce using rule 43 (expression -> expression DIV expression .)
    MXGT            reduce using rule 43 (expression -> expression DIV expression .)
    MXLTE           reduce using rule 43 (expression -> expression DIV expression .)
    MXGTE           reduce using rule 43 (expression -> expression DIV expression .)
    ELEQ            reduce using rule 43 (expression -> expression DIV expression .)
    ELLT            reduce using rule 43 (expression -> expression DIV expression .)
    ELGT            reduce using rule 43 (expression -> expression DIV expression .)
    ELLTE           reduce using rule 43 (expression -> expression DIV expression .)
    ELGTE           reduce using rule 43 (expression -> expression DIV expression .)
    LOGITIZE        reduce using rule 43 (expression -> expression DIV expression .)
    DIGITIZE        reduce using rule 43 (expression -> expression DIV expression .)
    REDUCE          reduce using rule 43 (expression -> expression DIV expression .)
    EXTEND          reduce using rule 43 (expression -> expression DIV expression .)
    SIZE            reduce using rule 43 (expression -> expression DIV expression .)
    RBRACKET        reduce using rule 43 (expression -> expression DIV expression .)
    COMMA           reduce using rule 43 (expression -> expression DIV expression .)
    STEP            reduce using rule 43 (expression -> expression DIV expression .)

  ! PLUS            [ shift and go to state 68 ]
  ! MINUS           [ shift and go to state 69 ]
  ! MULT            [ shift and go to state 70 ]
  ! DIV             [ shift and go to state 71 ]
  ! AND             [ shift and go to state 72 ]


state 109

    (44) expression -> expression AND expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    TRUE            reduce using rule 44 (expression -> expression AND expression .)
    AND             reduce using rule 44 (expression -> expression AND expression .)
    VAR             reduce using rule 44 (expression -> expression AND expression .)
    IDENTIFIER      reduce using rule 44 (expression -> expression AND expression .)
    MOVE            reduce using rule 44 (expression -> expression AND expression .)
    ROTATE          reduce using rule 44 (expression -> expression AND expression .)
    FOR             reduce using rule 44 (expression -> expression AND expression .)
    SWITCH          reduce using rule 44 (expression -> expression AND expression .)
    TASK            reduce using rule 44 (expression -> expression AND expression .)
    DO              reduce using rule 44 (expression -> expression AND expression .)
    GET             reduce using rule 44 (expression -> expression AND expression .)
    RESULT          reduce using rule 44 (expression -> expression AND expression .)
    LPAREN          reduce using rule 44 (expression -> expression AND expression .)
    $end            reduce using rule 44 (expression -> expression AND expression .)
    RPAREN          reduce using rule 44 (expression -> expression AND expression .)
    FALSE           reduce using rule 44 (expression -> expression AND expression .)
    NOT             reduce using rule 44 (expression -> expression AND expression .)
    DEC_INT         reduce using rule 44 (expression -> expression AND expression .)
    OCT_INT         reduce using rule 44 (expression -> expression AND expression .)
    HEX_INT         reduce using rule 44 (expression -> expression AND expression .)
    MXTRUE          reduce using rule 44 (expression -> expression AND expression .)
    MXFALSE         reduce using rule 44 (expression -> expression AND expression .)
    MXEQ            reduce using rule 44 (expression -> expression AND expression .)
    MXLT            reduce using rule 44 (expression -> expression AND expression .)
    MXGT            reduce using rule 44 (expression -> expression AND expression .)
    MXLTE           reduce using rule 44 (expression -> expression AND expression .)
    MXGTE           reduce using rule 44 (expression -> expression AND expression .)
    ELEQ            reduce using rule 44 (expression -> expression AND expression .)
    ELLT            reduce using rule 44 (expression -> expression AND expression .)
    ELGT            reduce using rule 44 (expression -> expression AND expression .)
    ELLTE           reduce using rule 44 (expression -> expression AND expression .)
    ELGTE           reduce using rule 44 (expression -> expression AND expression .)
    LOGITIZE        reduce using rule 44 (expression -> expression AND expression .)
    DIGITIZE        reduce using rule 44 (expression -> expression AND expression .)
    REDUCE          reduce using rule 44 (expression -> expression AND expression .)
    EXTEND          reduce using rule 44 (expression -> expression AND expression .)
    SIZE            reduce using rule 44 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 44 (expression -> expression AND expression .)
    COMMA           reduce using rule 44 (expression -> expression AND expression .)
    STEP            reduce using rule 44 (expression -> expression AND expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71

  ! PLUS            [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! MULT            [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! DIV             [ reduce using rule 44 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 72 ]


state 110

    (46) expression -> LPAREN expression RPAREN .

    TRUE            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MULT            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    VAR             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    IDENTIFIER      reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MOVE            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    ROTATE          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    SWITCH          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    TASK            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    GET             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    RESULT          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    FALSE           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DEC_INT         reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    OCT_INT         reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    HEX_INT         reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MXTRUE          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MXFALSE         reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MXEQ            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MXLT            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MXGT            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MXLTE           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MXGTE           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    ELEQ            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    ELLT            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    ELGT            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    ELLTE           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    ELGTE           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    LOGITIZE        reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DIGITIZE        reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    REDUCE          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    EXTEND          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    SIZE            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    STEP            reduce using rule 46 (expression -> LPAREN expression RPAREN .)


state 111

    (67) expression -> REDUCE IDENTIFIER dimensions_opt .

    TRUE            reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    PLUS            reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    MINUS           reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    MULT            reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    DIV             reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    AND             reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    VAR             reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    IDENTIFIER      reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    MOVE            reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    ROTATE          reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    FOR             reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    SWITCH          reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    TASK            reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    DO              reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    GET             reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    RESULT          reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    LPAREN          reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    $end            reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    RPAREN          reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    FALSE           reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    NOT             reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    DEC_INT         reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    OCT_INT         reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    HEX_INT         reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    MXTRUE          reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    MXFALSE         reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    MXEQ            reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    MXLT            reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    MXGT            reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    MXLTE           reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    MXGTE           reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    ELEQ            reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    ELLT            reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    ELGT            reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    ELLTE           reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    ELGTE           reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    LOGITIZE        reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    DIGITIZE        reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    REDUCE          reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    EXTEND          reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    SIZE            reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    RBRACKET        reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    COMMA           reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)
    STEP            reduce using rule 67 (expression -> REDUCE IDENTIFIER dimensions_opt .)


state 112

    (68) expression -> EXTEND IDENTIFIER dimensions_opt .

    TRUE            reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    PLUS            reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    MINUS           reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    MULT            reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    DIV             reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    AND             reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    VAR             reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    IDENTIFIER      reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    MOVE            reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    ROTATE          reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    FOR             reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    SWITCH          reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    TASK            reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    DO              reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    GET             reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    RESULT          reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    LPAREN          reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    $end            reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    RPAREN          reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    FALSE           reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    NOT             reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    DEC_INT         reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    OCT_INT         reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    HEX_INT         reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    MXTRUE          reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    MXFALSE         reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    MXEQ            reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    MXLT            reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    MXGT            reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    MXLTE           reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    MXGTE           reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    ELEQ            reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    ELLT            reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    ELGT            reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    ELLTE           reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    ELGTE           reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    LOGITIZE        reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    DIGITIZE        reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    REDUCE          reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    EXTEND          reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    SIZE            reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    RBRACKET        reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    COMMA           reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)
    STEP            reduce using rule 68 (expression -> EXTEND IDENTIFIER dimensions_opt .)


state 113

    (69) expression -> SIZE LPAREN IDENTIFIER . RPAREN

    RPAREN          shift and go to state 122


state 114

    (30) parameter_list -> parameter_list IDENTIFIER .

    IDENTIFIER      reduce using rule 30 (parameter_list -> parameter_list IDENTIFIER .)
    LPAREN          reduce using rule 30 (parameter_list -> parameter_list IDENTIFIER .)
    VAR             reduce using rule 30 (parameter_list -> parameter_list IDENTIFIER .)
    MOVE            reduce using rule 30 (parameter_list -> parameter_list IDENTIFIER .)
    ROTATE          reduce using rule 30 (parameter_list -> parameter_list IDENTIFIER .)
    FOR             reduce using rule 30 (parameter_list -> parameter_list IDENTIFIER .)
    SWITCH          reduce using rule 30 (parameter_list -> parameter_list IDENTIFIER .)
    TASK            reduce using rule 30 (parameter_list -> parameter_list IDENTIFIER .)
    DO              reduce using rule 30 (parameter_list -> parameter_list IDENTIFIER .)
    GET             reduce using rule 30 (parameter_list -> parameter_list IDENTIFIER .)
    RESULT          reduce using rule 30 (parameter_list -> parameter_list IDENTIFIER .)
    $end            reduce using rule 30 (parameter_list -> parameter_list IDENTIFIER .)
    RPAREN          reduce using rule 30 (parameter_list -> parameter_list IDENTIFIER .)
    FALSE           reduce using rule 30 (parameter_list -> parameter_list IDENTIFIER .)


state 115

    (28) function_definition -> TASK IDENTIFIER parameter_list block .

    VAR             reduce using rule 28 (function_definition -> TASK IDENTIFIER parameter_list block .)
    IDENTIFIER      reduce using rule 28 (function_definition -> TASK IDENTIFIER parameter_list block .)
    MOVE            reduce using rule 28 (function_definition -> TASK IDENTIFIER parameter_list block .)
    ROTATE          reduce using rule 28 (function_definition -> TASK IDENTIFIER parameter_list block .)
    FOR             reduce using rule 28 (function_definition -> TASK IDENTIFIER parameter_list block .)
    SWITCH          reduce using rule 28 (function_definition -> TASK IDENTIFIER parameter_list block .)
    TASK            reduce using rule 28 (function_definition -> TASK IDENTIFIER parameter_list block .)
    DO              reduce using rule 28 (function_definition -> TASK IDENTIFIER parameter_list block .)
    GET             reduce using rule 28 (function_definition -> TASK IDENTIFIER parameter_list block .)
    RESULT          reduce using rule 28 (function_definition -> TASK IDENTIFIER parameter_list block .)
    LPAREN          reduce using rule 28 (function_definition -> TASK IDENTIFIER parameter_list block .)
    $end            reduce using rule 28 (function_definition -> TASK IDENTIFIER parameter_list block .)
    RPAREN          reduce using rule 28 (function_definition -> TASK IDENTIFIER parameter_list block .)
    FALSE           reduce using rule 28 (function_definition -> TASK IDENTIFIER parameter_list block .)


state 116

    (34) argument_list -> argument_list expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    NOT             reduce using rule 34 (argument_list -> argument_list expression .)
    LPAREN          reduce using rule 34 (argument_list -> argument_list expression .)
    DEC_INT         reduce using rule 34 (argument_list -> argument_list expression .)
    OCT_INT         reduce using rule 34 (argument_list -> argument_list expression .)
    HEX_INT         reduce using rule 34 (argument_list -> argument_list expression .)
    TRUE            reduce using rule 34 (argument_list -> argument_list expression .)
    FALSE           reduce using rule 34 (argument_list -> argument_list expression .)
    IDENTIFIER      reduce using rule 34 (argument_list -> argument_list expression .)
    MXTRUE          reduce using rule 34 (argument_list -> argument_list expression .)
    MXFALSE         reduce using rule 34 (argument_list -> argument_list expression .)
    MXEQ            reduce using rule 34 (argument_list -> argument_list expression .)
    MXLT            reduce using rule 34 (argument_list -> argument_list expression .)
    MXGT            reduce using rule 34 (argument_list -> argument_list expression .)
    MXLTE           reduce using rule 34 (argument_list -> argument_list expression .)
    MXGTE           reduce using rule 34 (argument_list -> argument_list expression .)
    ELEQ            reduce using rule 34 (argument_list -> argument_list expression .)
    ELLT            reduce using rule 34 (argument_list -> argument_list expression .)
    ELGT            reduce using rule 34 (argument_list -> argument_list expression .)
    ELLTE           reduce using rule 34 (argument_list -> argument_list expression .)
    ELGTE           reduce using rule 34 (argument_list -> argument_list expression .)
    LOGITIZE        reduce using rule 34 (argument_list -> argument_list expression .)
    DIGITIZE        reduce using rule 34 (argument_list -> argument_list expression .)
    REDUCE          reduce using rule 34 (argument_list -> argument_list expression .)
    EXTEND          reduce using rule 34 (argument_list -> argument_list expression .)
    SIZE            reduce using rule 34 (argument_list -> argument_list expression .)
    GET             reduce using rule 34 (argument_list -> argument_list expression .)
    VAR             reduce using rule 34 (argument_list -> argument_list expression .)
    MOVE            reduce using rule 34 (argument_list -> argument_list expression .)
    ROTATE          reduce using rule 34 (argument_list -> argument_list expression .)
    FOR             reduce using rule 34 (argument_list -> argument_list expression .)
    SWITCH          reduce using rule 34 (argument_list -> argument_list expression .)
    TASK            reduce using rule 34 (argument_list -> argument_list expression .)
    DO              reduce using rule 34 (argument_list -> argument_list expression .)
    RESULT          reduce using rule 34 (argument_list -> argument_list expression .)
    $end            reduce using rule 34 (argument_list -> argument_list expression .)
    RPAREN          reduce using rule 34 (argument_list -> argument_list expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72


state 117

    (16) var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    VAR             reduce using rule 16 (var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .)
    IDENTIFIER      reduce using rule 16 (var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .)
    MOVE            reduce using rule 16 (var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .)
    ROTATE          reduce using rule 16 (var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .)
    FOR             reduce using rule 16 (var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .)
    SWITCH          reduce using rule 16 (var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .)
    TASK            reduce using rule 16 (var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .)
    DO              reduce using rule 16 (var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .)
    GET             reduce using rule 16 (var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .)
    RESULT          reduce using rule 16 (var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .)
    LPAREN          reduce using rule 16 (var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .)
    $end            reduce using rule 16 (var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .)
    RPAREN          reduce using rule 16 (var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .)
    FALSE           reduce using rule 16 (var_declaration -> VAR IDENTIFIER dimensions_opt ASSIGN expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72


state 118

    (18) dimensions_opt -> LBRACKET dim_list RBRACKET .

    ASSIGN          reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    TRUE            reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    PLUS            reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    MINUS           reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    MULT            reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    DIV             reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    AND             reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    VAR             reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    IDENTIFIER      reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    MOVE            reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    ROTATE          reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    FOR             reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    SWITCH          reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    TASK            reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    DO              reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    GET             reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    RESULT          reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    LPAREN          reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    $end            reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    RPAREN          reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    FALSE           reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    NOT             reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    DEC_INT         reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    OCT_INT         reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    HEX_INT         reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    MXTRUE          reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    MXFALSE         reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    MXEQ            reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    MXLT            reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    MXGT            reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    MXLTE           reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    MXGTE           reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    ELEQ            reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    ELLT            reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    ELGT            reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    ELLTE           reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    ELGTE           reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    LOGITIZE        reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    DIGITIZE        reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    REDUCE          reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    EXTEND          reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    SIZE            reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    RBRACKET        reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    COMMA           reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)
    STEP            reduce using rule 18 (dimensions_opt -> LBRACKET dim_list RBRACKET .)


state 119

    (19) dim_list -> dim_list COMMA . expression
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 123

state 120

    (25) for_loop -> FOR IDENTIFIER BOUNDARY expression STEP . expression block
    (40) expression -> . expression PLUS expression
    (41) expression -> . expression MINUS expression
    (42) expression -> . expression MULT expression
    (43) expression -> . expression DIV expression
    (44) expression -> . expression AND expression
    (45) expression -> . NOT expression
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . DEC_INT
    (48) expression -> . OCT_INT
    (49) expression -> . HEX_INT
    (50) expression -> . TRUE
    (51) expression -> . FALSE
    (52) expression -> . IDENTIFIER
    (53) expression -> . MXTRUE expression
    (54) expression -> . MXFALSE expression
    (55) expression -> . MXEQ expression
    (56) expression -> . MXLT expression
    (57) expression -> . MXGT expression
    (58) expression -> . MXLTE expression
    (59) expression -> . MXGTE expression
    (60) expression -> . ELEQ expression
    (61) expression -> . ELLT expression
    (62) expression -> . ELGT expression
    (63) expression -> . ELLTE expression
    (64) expression -> . ELGTE expression
    (65) expression -> . LOGITIZE IDENTIFIER
    (66) expression -> . DIGITIZE IDENTIFIER
    (67) expression -> . REDUCE IDENTIFIER dimensions_opt
    (68) expression -> . EXTEND IDENTIFIER dimensions_opt
    (69) expression -> . SIZE LPAREN IDENTIFIER RPAREN
    (70) expression -> . GET ENVIRONMENT

    NOT             shift and go to state 34
    LPAREN          shift and go to state 35
    DEC_INT         shift and go to state 36
    OCT_INT         shift and go to state 37
    HEX_INT         shift and go to state 38
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    IDENTIFIER      shift and go to state 39
    MXTRUE          shift and go to state 40
    MXFALSE         shift and go to state 41
    MXEQ            shift and go to state 42
    MXLT            shift and go to state 43
    MXGT            shift and go to state 44
    MXLTE           shift and go to state 45
    MXGTE           shift and go to state 46
    ELEQ            shift and go to state 47
    ELLT            shift and go to state 48
    ELGT            shift and go to state 49
    ELLTE           shift and go to state 50
    ELGTE           shift and go to state 51
    LOGITIZE        shift and go to state 52
    DIGITIZE        shift and go to state 53
    REDUCE          shift and go to state 54
    EXTEND          shift and go to state 55
    SIZE            shift and go to state 56
    GET             shift and go to state 57

    expression                     shift and go to state 124

state 121

    (26) switch_statement -> SWITCH expression TRUE block FALSE . block
    (38) block -> . statements
    (39) block -> . group_statements
    (2) statements -> .
    (3) statements -> . statements statement
    (15) group_statements -> . LPAREN statements RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    VAR             reduce using rule 2 (statements -> .)
    IDENTIFIER      reduce using rule 2 (statements -> .)
    MOVE            reduce using rule 2 (statements -> .)
    ROTATE          reduce using rule 2 (statements -> .)
    FOR             reduce using rule 2 (statements -> .)
    SWITCH          reduce using rule 2 (statements -> .)
    TASK            reduce using rule 2 (statements -> .)
    DO              reduce using rule 2 (statements -> .)
    GET             reduce using rule 2 (statements -> .)
    RESULT          reduce using rule 2 (statements -> .)
    FALSE           reduce using rule 2 (statements -> .)
    $end            reduce using rule 2 (statements -> .)
    RPAREN          reduce using rule 2 (statements -> .)
    LPAREN          shift and go to state 25

  ! LPAREN          [ reduce using rule 2 (statements -> .) ]

    block                          shift and go to state 125
    statements                     shift and go to state 103
    group_statements               shift and go to state 104

state 122

    (69) expression -> SIZE LPAREN IDENTIFIER RPAREN .

    TRUE            reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    PLUS            reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    MINUS           reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    MULT            reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    DIV             reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    AND             reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    VAR             reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    IDENTIFIER      reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    MOVE            reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    ROTATE          reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    FOR             reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    SWITCH          reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    TASK            reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    DO              reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    GET             reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    RESULT          reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    LPAREN          reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    $end            reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    FALSE           reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    NOT             reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    DEC_INT         reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    OCT_INT         reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    HEX_INT         reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    MXTRUE          reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    MXFALSE         reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    MXEQ            reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    MXLT            reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    MXGT            reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    MXLTE           reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    MXGTE           reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    ELEQ            reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    ELLT            reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    ELGT            reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    ELLTE           reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    ELGTE           reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    LOGITIZE        reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    DIGITIZE        reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    REDUCE          reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    EXTEND          reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    SIZE            reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    RBRACKET        reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    COMMA           reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)
    STEP            reduce using rule 69 (expression -> SIZE LPAREN IDENTIFIER RPAREN .)


state 123

    (19) dim_list -> dim_list COMMA expression .
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression

    RBRACKET        reduce using rule 19 (dim_list -> dim_list COMMA expression .)
    COMMA           reduce using rule 19 (dim_list -> dim_list COMMA expression .)
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72


state 124

    (25) for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression . block
    (40) expression -> expression . PLUS expression
    (41) expression -> expression . MINUS expression
    (42) expression -> expression . MULT expression
    (43) expression -> expression . DIV expression
    (44) expression -> expression . AND expression
    (38) block -> . statements
    (39) block -> . group_statements
    (2) statements -> .
    (3) statements -> . statements statement
    (15) group_statements -> . LPAREN statements RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    PLUS            shift and go to state 68
    MINUS           shift and go to state 69
    MULT            shift and go to state 70
    DIV             shift and go to state 71
    AND             shift and go to state 72
    VAR             reduce using rule 2 (statements -> .)
    IDENTIFIER      reduce using rule 2 (statements -> .)
    MOVE            reduce using rule 2 (statements -> .)
    ROTATE          reduce using rule 2 (statements -> .)
    FOR             reduce using rule 2 (statements -> .)
    SWITCH          reduce using rule 2 (statements -> .)
    TASK            reduce using rule 2 (statements -> .)
    DO              reduce using rule 2 (statements -> .)
    GET             reduce using rule 2 (statements -> .)
    RESULT          reduce using rule 2 (statements -> .)
    FALSE           reduce using rule 2 (statements -> .)
    $end            reduce using rule 2 (statements -> .)
    RPAREN          reduce using rule 2 (statements -> .)
    LPAREN          shift and go to state 25

  ! LPAREN          [ reduce using rule 2 (statements -> .) ]

    block                          shift and go to state 126
    statements                     shift and go to state 103
    group_statements               shift and go to state 104

state 125

    (26) switch_statement -> SWITCH expression TRUE block FALSE block .

    VAR             reduce using rule 26 (switch_statement -> SWITCH expression TRUE block FALSE block .)
    IDENTIFIER      reduce using rule 26 (switch_statement -> SWITCH expression TRUE block FALSE block .)
    MOVE            reduce using rule 26 (switch_statement -> SWITCH expression TRUE block FALSE block .)
    ROTATE          reduce using rule 26 (switch_statement -> SWITCH expression TRUE block FALSE block .)
    FOR             reduce using rule 26 (switch_statement -> SWITCH expression TRUE block FALSE block .)
    SWITCH          reduce using rule 26 (switch_statement -> SWITCH expression TRUE block FALSE block .)
    TASK            reduce using rule 26 (switch_statement -> SWITCH expression TRUE block FALSE block .)
    DO              reduce using rule 26 (switch_statement -> SWITCH expression TRUE block FALSE block .)
    GET             reduce using rule 26 (switch_statement -> SWITCH expression TRUE block FALSE block .)
    RESULT          reduce using rule 26 (switch_statement -> SWITCH expression TRUE block FALSE block .)
    LPAREN          reduce using rule 26 (switch_statement -> SWITCH expression TRUE block FALSE block .)
    $end            reduce using rule 26 (switch_statement -> SWITCH expression TRUE block FALSE block .)
    RPAREN          reduce using rule 26 (switch_statement -> SWITCH expression TRUE block FALSE block .)
    FALSE           reduce using rule 26 (switch_statement -> SWITCH expression TRUE block FALSE block .)


state 126

    (25) for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .

    VAR             reduce using rule 25 (for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .)
    IDENTIFIER      reduce using rule 25 (for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .)
    MOVE            reduce using rule 25 (for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .)
    ROTATE          reduce using rule 25 (for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .)
    FOR             reduce using rule 25 (for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .)
    SWITCH          reduce using rule 25 (for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .)
    TASK            reduce using rule 25 (for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .)
    DO              reduce using rule 25 (for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .)
    GET             reduce using rule 25 (for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .)
    RESULT          reduce using rule 25 (for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .)
    LPAREN          reduce using rule 25 (for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .)
    $end            reduce using rule 25 (for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .)
    RPAREN          reduce using rule 25 (for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .)
    FALSE           reduce using rule 25 (for_loop -> FOR IDENTIFIER BOUNDARY expression STEP expression block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENTIFIER in state 58 resolved as shift
WARNING: shift/reduce conflict for NOT in state 59 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 59 resolved as shift
WARNING: shift/reduce conflict for DEC_INT in state 59 resolved as shift
WARNING: shift/reduce conflict for OCT_INT in state 59 resolved as shift
WARNING: shift/reduce conflict for HEX_INT in state 59 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 59 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 59 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 59 resolved as shift
WARNING: shift/reduce conflict for MXTRUE in state 59 resolved as shift
WARNING: shift/reduce conflict for MXFALSE in state 59 resolved as shift
WARNING: shift/reduce conflict for MXEQ in state 59 resolved as shift
WARNING: shift/reduce conflict for MXLT in state 59 resolved as shift
WARNING: shift/reduce conflict for MXGT in state 59 resolved as shift
WARNING: shift/reduce conflict for MXLTE in state 59 resolved as shift
WARNING: shift/reduce conflict for MXGTE in state 59 resolved as shift
WARNING: shift/reduce conflict for ELEQ in state 59 resolved as shift
WARNING: shift/reduce conflict for ELLT in state 59 resolved as shift
WARNING: shift/reduce conflict for ELGT in state 59 resolved as shift
WARNING: shift/reduce conflict for ELLTE in state 59 resolved as shift
WARNING: shift/reduce conflict for ELGTE in state 59 resolved as shift
WARNING: shift/reduce conflict for LOGITIZE in state 59 resolved as shift
WARNING: shift/reduce conflict for DIGITIZE in state 59 resolved as shift
WARNING: shift/reduce conflict for REDUCE in state 59 resolved as shift
WARNING: shift/reduce conflict for EXTEND in state 59 resolved as shift
WARNING: shift/reduce conflict for SIZE in state 59 resolved as shift
WARNING: shift/reduce conflict for GET in state 59 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MULT in state 75 resolved as shift
WARNING: shift/reduce conflict for DIV in state 75 resolved as shift
WARNING: shift/reduce conflict for AND in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MULT in state 76 resolved as shift
WARNING: shift/reduce conflict for DIV in state 76 resolved as shift
WARNING: shift/reduce conflict for AND in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MULT in state 77 resolved as shift
WARNING: shift/reduce conflict for DIV in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MULT in state 78 resolved as shift
WARNING: shift/reduce conflict for DIV in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MULT in state 79 resolved as shift
WARNING: shift/reduce conflict for DIV in state 79 resolved as shift
WARNING: shift/reduce conflict for AND in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MULT in state 80 resolved as shift
WARNING: shift/reduce conflict for DIV in state 80 resolved as shift
WARNING: shift/reduce conflict for AND in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MULT in state 81 resolved as shift
WARNING: shift/reduce conflict for DIV in state 81 resolved as shift
WARNING: shift/reduce conflict for AND in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MULT in state 82 resolved as shift
WARNING: shift/reduce conflict for DIV in state 82 resolved as shift
WARNING: shift/reduce conflict for AND in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MULT in state 83 resolved as shift
WARNING: shift/reduce conflict for DIV in state 83 resolved as shift
WARNING: shift/reduce conflict for AND in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MULT in state 84 resolved as shift
WARNING: shift/reduce conflict for DIV in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MULT in state 85 resolved as shift
WARNING: shift/reduce conflict for DIV in state 85 resolved as shift
WARNING: shift/reduce conflict for AND in state 85 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MULT in state 86 resolved as shift
WARNING: shift/reduce conflict for DIV in state 86 resolved as shift
WARNING: shift/reduce conflict for AND in state 86 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 94 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 94 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 95 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 95 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 95 resolved as shift
WARNING: shift/reduce conflict for GET in state 95 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 102 resolved as shift
WARNING: shift/reduce conflict for VAR in state 103 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 103 resolved as shift
WARNING: shift/reduce conflict for MOVE in state 103 resolved as shift
WARNING: shift/reduce conflict for ROTATE in state 103 resolved as shift
WARNING: shift/reduce conflict for FOR in state 103 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 103 resolved as shift
WARNING: shift/reduce conflict for TASK in state 103 resolved as shift
WARNING: shift/reduce conflict for DO in state 103 resolved as shift
WARNING: shift/reduce conflict for GET in state 103 resolved as shift
WARNING: shift/reduce conflict for RESULT in state 103 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 103 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 121 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 124 resolved as shift
